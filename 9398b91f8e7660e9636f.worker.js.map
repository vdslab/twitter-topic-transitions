{"version":3,"sources":["../webpack/bootstrap","../node_modules/ndarray/ndarray.js","../node_modules/cwise/lib/cwise-esprima.js","../node_modules/ndarray-ops/ndarray-ops.js","../node_modules/cwise-compiler/compiler.js","../node_modules/uniq/uniq.js","../node_modules/tsne-js/dist/pairwise-distances.js","../node_modules/tsne-js/dist/index.js","workers/tsne.worker.js","../node_modules/events/events.js","../node_modules/iota-array/iota.js","../node_modules/is-buffer/index.js","../node_modules/cwise-compiler/lib/thunk.js","../node_modules/cwise-compiler/lib/compile.js","../node_modules/ndarray-pack/convert.js","../node_modules/ndarray-pack/doConvert.js","../node_modules/ndarray-unpack/unpack.js","../node_modules/dup/dup.js","../node_modules/cwise-parser/index.js","../node_modules/webpack/buildin/global.js","../node_modules/cwise-parser/node_modules/esprima/esprima.js","../node_modules/tsne-js/dist/randn.js","../node_modules/tsne-js/dist/joint-probabilities.js","../node_modules/tsne-js/dist/kl-divergence.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","iota","require","isBuffer","hasTypedArrays","Float64Array","compare1st","a","b","order","stride","this","terms","Array","length","Math","abs","sort","result","compileConstructor","dtype","dimension","className","join","useGetters","code","Function","procedure","CACHED_CONSTRUCTORS","indices","args","map","index_str","shapeArg","strideArg","push","a_vars","c_vars","tShape","tStride","idx","data","shape","offset","undefined","ctor","array","sz","toString","isArray","arrayDType","ctor_list","parse","compile","REQUIRED_FIELDS","OPTIONAL_FIELDS","user_args","id","indexOf","console","warn","Error","pre","body","post","debug","printCode","funcName","blockSize","EmptyProc","thisVars","localVars","fixup","x","lvalue","rvalue","count","makeOp","wrapper","proc","pcompile","assign_ops","add","sub","mul","div","mod","band","bor","bxor","lshift","rshift","rrshift","op","unary_ops","not","bnot","neg","recip","binary_ops","and","or","eq","neq","lt","gt","leq","geq","math_unary","f","math_comm","math_noncomm","any","all","sum","prod","norm2squared","norm2","norminf","norm1","sup","inf","argmin","argmax","random","assign","assigns","equals","createThunk","Procedure","argTypes","shimArgs","arrayArgs","arrayBlockIndices","scalarArgs","offsetArgs","offsetArgIndex","indexArgs","shapeArgs","proc_args","slice","arg_type","blockIndices","list","compare","sorted","ptr","len","unique_pred","unique_eq","default","metric","nSamples","distance","_ndarray2","j","euclidean","pick","set","manhattan","jaccard","dice","_interopRequireDefault","_cwise2","obj","sqrt","tf","tt","a_bool","round","b_bool","_slicedToArray","arr","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","sliceIterator","TypeError","_createClass","defineProperties","target","props","descriptor","configurable","writable","Constructor","protoProps","staticProps","_events","_ndarrayOps2","_ndarrayPack2","_ndarrayUnpack2","_randn2","_pairwiseDistances2","_jointProbabilities2","_klDivergence2","_toConsumableArray","arr2","from","TSNE","_EventEmitter","config","instance","_classCallCheck","_this","self","ReferenceError","_possibleConstructorReturn","getPrototypeOf","dim","perplexity","earlyExaggeration","learningRate","nIter","barneshut","inputData","outputEmbedding","subClass","superClass","constructor","setPrototypeOf","__proto__","_inherits","opts","type","size","_loop","dimShape","max","apply","coord","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_inputData","concat","return","emit","distances","alpha","P","error","Number","MAX_VALUE","iter","mulseq","_gradDesc2","_gradDesc","_gradDesc3","_gradDesc4","_gradDesc5","divseq","_gradDesc6","_gradDesc7","_run","run","_run2","outputEmbeddingScaled","temp","maxVal","divs","momentum","minGradNorm","arguments","minErrorDiff","nIterWithoutProg","update","tempArray","gains","bestError","bestIter","norm","gainsUpdate","c_gains","c_update","c_grad","_divergenceKL","_divergenceKL2","cost","grad","errorDiff","gradNorm","muleq","muls","subeq","addeq","getOutputScaled","EventEmitter","async","tsne","model","init","addEventListener","e","_e$data","method","params","__webpack_exports__","Promise","resolve","then","reject","postMessage","catch","message","stack","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","isNaN","once","emitter","eventListener","errorListener","removeListener","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","events","existing","warning","newListener","unshift","warned","w","String","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","ret","unwrapListeners","arrayClone","listenerCount","copy","arg","RangeError","setMaxListeners","getMaxListeners","doError","er","context","handler","listeners","addListener","on","prependListener","prependOnceListener","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","keys","rawListeners","eventNames","readFloatLE","isSlowBuffer","_isBuffer","vars","thunkName","typesig","string_typesig","shapeLengthConditions","shapeConditions","log","thunk","uniq","innerFill","nargs","has_index","pidx","processBlock","block","dtypes","carg","re","RegExp","ptrStr","arrNum","offArgIndex","localStr","arrStr","replace","reStrArr","ptrStrArr","trim","typeSummary","summary","allEqual","digits","match","charAt","orders","blockBegin","blockEnd","loopBegin","loopEnd","loopOrders","newOrder","arglist","zeros","off_arg","init_string","matched","countMatches","indexStr","outerFill","loopName","ndarray","do_convert","dup","do_unpack","cwise","v","dupe_array","dupe_number","esprima","PREFIX_COUNTER","CompiledArgument","CompiledRoutine","func","src","ast","range","prefix","argNames","expression","callee","names","getArgNames","compiledArgs","exploded","node","rewrite","nstr","lo","hi","visit","parent","computed","createThisVar","argNo","usage","left","operator","LVALUE","getUsage","identifier","window","global","isGlobal","createLocal","g","root","factory","define","Token","TokenName","FnExprTokens","Syntax","PropertyKind","Messages","Regex","SyntaxTreeDelegate","source","strict","lineNumber","lineStart","delegate","lookahead","extra","assert","condition","isDecimalDigit","ch","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","isIdentifierStart","NonAsciiIdentifierStart","test","fromCharCode","isIdentifierPart","NonAsciiIdentifierPart","isFutureReservedWord","isStrictModeReservedWord","isRestrictedWord","isKeyword","addComment","start","end","loc","comment","lastCommentStart","comments","attachComment","leadingComments","trailingComments","skipSingleLineComment","line","column","charCodeAt","skipMultiLineComment","throwError","UnexpectedToken","skipComment","scanHexEscape","toLowerCase","getEscapedIdentifier","substr","getIdentifier","scanIdentifier","Identifier","Keyword","NullLiteral","BooleanLiteral","scanPunctuator","code2","ch2","ch3","ch4","ch1","tokenize","openParenToken","tokens","openCurlyToken","Punctuator","scanHexLiteral","number","NumericLiteral","parseInt","scanOctalLiteral","octal","isImplicitOctalLiteral","scanNumericLiteral","parseFloat","scanStringLiteral","quote","unescaped","restore","startLineNumber","startLineStart","str","StringLiteral","testRegExp","pattern","flags","InvalidRegExp","scanRegExpBody","classMarker","terminated","UnterminatedRegExp","literal","scanRegExpFlags","throwErrorTolerant","scanRegExp","RegularExpression","collectRegex","pos","regex","token","isIdentifierName","advanceSlash","prevToken","checkToken","advance","EOF","collectToken","lex","peek","Position","SourceLocation","startLine","startColumn","peekLineTerminator","found","messageFormat","msg","whole","description","errors","throwUnexpected","UnexpectedEOS","UnexpectedNumber","UnexpectedString","UnexpectedIdentifier","UnexpectedReserved","StrictReservedWord","expect","expectKeyword","keyword","matchKeyword","matchAssign","consumeSemicolon","oldIndex","oldLineNumber","oldLineStart","oldLookahead","isLeftHandSide","expr","MemberExpression","parseArrayInitialiser","startToken","elements","parseAssignmentExpression","markEnd","createArrayExpression","parsePropertyFunction","param","first","previousStrict","parseFunctionSourceElements","StrictParamName","createFunctionExpression","parseObjectPropertyKey","StrictOctalLiteral","createLiteral","createIdentifier","parseObjectProperty","createProperty","parseVariableIdentifier","parseObjectInitialiser","kind","properties","Data","Get","Set","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","createObjectExpression","parseGroupExpression","parseExpression","parsePrimaryExpression","parseFunctionExpression","createThisExpression","parseArguments","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseNewExpression","parseLeftHandSideExpression","createNewExpression","parseLeftHandSideExpressionAllowCall","previousAllowIn","allowIn","createMemberExpression","createCallExpression","parsePostfixExpression","StrictLHSPostfix","InvalidLHSInAssignment","createPostfixExpression","parseUnaryExpression","StrictLHSPrefix","createUnaryExpression","argument","StrictDelete","binaryPrecedence","prec","parseBinaryExpression","marker","markers","right","createBinaryExpression","parseConditionalExpression","consequent","alternate","createConditionalExpression","StrictLHSAssignment","createAssignmentExpression","createSequenceExpression","expressions","parseStatementList","statement","parseSourceElement","parseBlock","createBlockStatement","parseVariableDeclaration","StrictVarName","createVariableDeclarator","parseVariableDeclarationList","parseVariableStatement","declarations","createVariableDeclaration","parseConstLetDeclaration","parseEmptyStatement","createEmptyStatement","parseExpressionStatement","createExpressionStatement","parseIfStatement","parseStatement","createIfStatement","parseDoWhileStatement","oldInIteration","inIteration","createDoWhileStatement","parseWhileStatement","createWhileStatement","parseForVariableDeclaration","parseForStatement","InvalidLHSInForIn","createForStatement","createForInStatement","parseContinueStatement","label","IllegalContinue","createContinueStatement","labelSet","UnknownLabel","parseBreakStatement","inSwitch","IllegalBreak","createBreakStatement","parseReturnStatement","inFunctionBody","IllegalReturn","createReturnStatement","parseWithStatement","StrictModeWith","createWithStatement","parseSwitchCase","createSwitchCase","parseSwitchStatement","discriminant","cases","clause","oldInSwitch","defaultFound","createSwitchStatement","MultipleDefaultsInSwitch","parseThrowStatement","NewlineAfterThrow","createThrowStatement","parseCatchClause","StrictCatchVariable","createCatchClause","parseTryStatement","handlers","finalizer","NoCatchOrFinally","createTryStatement","parseDebuggerStatement","createDebuggerStatement","labeledBody","parseFunctionDeclaration","Redeclaration","createLabeledStatement","sourceElement","firstRestricted","oldLabelSet","oldInFunctionBody","sourceElements","Literal","parseParams","stricted","paramSet","StrictParamDupe","tmp","StrictFunctionName","createFunctionDeclaration","parseSourceElements","parseProgram","createProgram","filterTokenLocation","entry","options","tolerant","lexError","program","bottomRightStack","AssignmentExpression","ArrayExpression","BlockStatement","BinaryExpression","BreakStatement","CallExpression","CatchClause","ConditionalExpression","ContinueStatement","DoWhileStatement","DebuggerStatement","EmptyStatement","ExpressionStatement","ForStatement","ForInStatement","FunctionDeclaration","FunctionExpression","IfStatement","LabeledStatement","LogicalExpression","NewExpression","ObjectExpression","Program","Property","ReturnStatement","SequenceExpression","SwitchStatement","SwitchCase","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","processComment","lastChild","postProcess","each","defaults","rest","generator","raw","accessor","guardedHandlers","version","types","freeze","samples","randArray","gaussRandom","_ndarray","u","P_cond","beta","betaMin","betaMax","Infinity","desired_entropy","entropyDiff","sum_Pi","sum_disti_Pi","step","exp","EPSILON_DBL","PERPLEXITY_TOLERANCE","transpose","sum_P","MACHINE_EPSILON","maxseq","EPSILON","embedding","Q","square","powseq","addseq","sum_n","temp2","logeq","kl_divergence","PQd","_temp","negeq"],"mappings":"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","file":"9398b91f8e7660e9636f.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/twitter-topic-transitions/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n      case \"[object BigInt64Array]\":\n        return \"bigint64\"\n      case \"[object BigUint64Array]\":\n        return \"biguint64\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"bigint64\": [],\n  \"biguint64\": [],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n","\"use strict\"\n\nvar parse   = require(\"cwise-parser\")\nvar compile = require(\"cwise-compiler\")\n\nvar REQUIRED_FIELDS = [ \"args\", \"body\" ]\nvar OPTIONAL_FIELDS = [ \"pre\", \"post\", \"printCode\", \"funcName\", \"blockSize\" ]\n\nfunction createCWise(user_args) {\n  //Check parameters\n  for(var id in user_args) {\n    if(REQUIRED_FIELDS.indexOf(id) < 0 &&\n       OPTIONAL_FIELDS.indexOf(id) < 0) {\n      console.warn(\"cwise: Unknown argument '\"+id+\"' passed to expression compiler\")\n    }\n  }\n  for(var i=0; i<REQUIRED_FIELDS.length; ++i) {\n    if(!user_args[REQUIRED_FIELDS[i]]) {\n      throw new Error(\"cwise: Missing argument: \" + REQUIRED_FIELDS[i])\n    }\n  }\n  \n  //Parse blocks\n  return compile({\n    args:       user_args.args,\n    pre:        parse(user_args.pre || function(){}),\n    body:       parse(user_args.body),\n    post:       parse(user_args.post || function(){}),\n    debug:      !!user_args.printCode,\n    funcName:   user_args.funcName || user_args.body.name || \"cwise\",\n    blockSize:  user_args.blockSize || 64\n  })\n}\n\nmodule.exports = createCWise\n","\"use strict\"\n\nvar compile = require(\"cwise-compiler\")\n\nvar EmptyProc = {\n  body: \"\",\n  args: [],\n  thisVars: [],\n  localVars: []\n}\n\nfunction fixup(x) {\n  if(!x) {\n    return EmptyProc\n  }\n  for(var i=0; i<x.args.length; ++i) {\n    var a = x.args[i]\n    if(i === 0) {\n      x.args[i] = {name: a, lvalue:true, rvalue: !!x.rvalue, count:x.count||1 }\n    } else {\n      x.args[i] = {name: a, lvalue:false, rvalue:true, count: 1}\n    }\n  }\n  if(!x.thisVars) {\n    x.thisVars = []\n  }\n  if(!x.localVars) {\n    x.localVars = []\n  }\n  return x\n}\n\nfunction pcompile(user_args) {\n  return compile({\n    args:     user_args.args,\n    pre:      fixup(user_args.pre),\n    body:     fixup(user_args.body),\n    post:     fixup(user_args.proc),\n    funcName: user_args.funcName\n  })\n}\n\nfunction makeOp(user_args) {\n  var args = []\n  for(var i=0; i<user_args.args.length; ++i) {\n    args.push(\"a\"+i)\n  }\n  var wrapper = new Function(\"P\", [\n    \"return function \", user_args.funcName, \"_ndarrayops(\", args.join(\",\"), \") {P(\", args.join(\",\"), \");return a0}\"\n  ].join(\"\"))\n  return wrapper(pcompile(user_args))\n}\n\nvar assign_ops = {\n  add:  \"+\",\n  sub:  \"-\",\n  mul:  \"*\",\n  div:  \"/\",\n  mod:  \"%\",\n  band: \"&\",\n  bor:  \"|\",\n  bxor: \"^\",\n  lshift: \"<<\",\n  rshift: \">>\",\n  rrshift: \">>>\"\n}\n;(function(){\n  for(var id in assign_ops) {\n    var op = assign_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\",\"b\",\"c\"],\n             body: \"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\",\"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a\"+op+\"=b\"},\n      rvalue: true,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\", \"array\", \"scalar\"],\n      body: {args:[\"a\",\"b\",\"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\",\"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a\"+op+\"=s\"},\n      rvalue: true,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar unary_ops = {\n  not: \"!\",\n  bnot: \"~\",\n  neg: \"-\",\n  recip: \"1.0/\"\n}\n;(function(){\n  for(var id in unary_ops) {\n    var op = unary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a=\"+op+\"b\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\"],\n      body: {args:[\"a\"],\n             body:\"a=\"+op+\"a\"},\n      rvalue: true,\n      count: 2,\n      funcName: id+\"eq\"\n    })\n  }\n})();\n\nvar binary_ops = {\n  and: \"&&\",\n  or: \"||\",\n  eq: \"===\",\n  neq: \"!==\",\n  lt: \"<\",\n  gt: \">\",\n  leq: \"<=\",\n  geq: \">=\"\n}\n;(function() {\n  for(var id in binary_ops) {\n    var op = binary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\", \"b\", \"c\"],\n             body:\"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\",\"array\",\"scalar\"],\n      body: {args:[\"a\", \"b\", \"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\", \"b\"],\n             body:\"a=a\"+op+\"b\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\", \"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a=a\"+op+\"s\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar math_unary = [\n  \"abs\",\n  \"acos\",\n  \"asin\",\n  \"atan\",\n  \"ceil\",\n  \"cos\",\n  \"exp\",\n  \"floor\",\n  \"log\",\n  \"round\",\n  \"sin\",\n  \"sqrt\",\n  \"tan\"\n]\n;(function() {\n  for(var i=0; i<math_unary.length; ++i) {\n    var f = math_unary[i]\n    exports[f] = makeOp({\n                    args: [\"array\", \"array\"],\n                    pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                    body: {args:[\"a\",\"b\"], body:\"a=this_f(b)\", thisVars:[\"this_f\"]},\n                    funcName: f\n                  })\n    exports[f+\"eq\"] = makeOp({\n                      args: [\"array\"],\n                      pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                      body: {args: [\"a\"], body:\"a=this_f(a)\", thisVars:[\"this_f\"]},\n                      rvalue: true,\n                      count: 2,\n                      funcName: f+\"eq\"\n                    })\n  }\n})();\n\nvar math_comm = [\n  \"max\",\n  \"min\",\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_comm.length; ++i) {\n    var f= math_comm[i]\n    exports[f] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f\n                })\n    exports[f+\"s\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"s\"\n                  })\n    exports[f+\"eq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"eq\"\n                  })\n    exports[f+\"seq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"seq\"\n                  })\n  }\n})();\n\nvar math_noncomm = [\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_noncomm.length; ++i) {\n    var f= math_noncomm[i]\n    exports[f+\"op\"] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"op\"\n                })\n    exports[f+\"ops\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"ops\"\n                  })\n    exports[f+\"opeq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"opeq\"\n                  })\n    exports[f+\"opseq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"opseq\"\n                  })\n  }\n})();\n\nexports.any = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"if(a){return true}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return false\"},\n  funcName: \"any\"\n})\n\nexports.all = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1}], body: \"if(!x){return false}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"all\"\n})\n\nexports.sum = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s+=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"sum\"\n})\n\nexports.prod = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=1\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s*=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"prod\"\n})\n\nexports.norm2squared = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm2squared\"\n})\n  \nexports.norm2 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return Math.sqrt(this_s)\"},\n  funcName: \"norm2\"\n})\n  \n\nexports.norminf = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:4}], body:\"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norminf\"\n})\n\nexports.norm1 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:3}], body: \"this_s+=a<0?-a:a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm1\"\n})\n\nexports.sup = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=-Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.inf = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.argmin = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})\n\nexports.argmax = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})  \n\nexports.random = makeOp({\n  args: [\"array\"],\n  pre: {args:[], body:\"this_f=Math.random\", thisVars:[\"this_f\"]},\n  body: {args: [\"a\"], body:\"a=this_f()\", thisVars:[\"this_f\"]},\n  funcName: \"random\"\n})\n\nexports.assign = makeOp({\n  args:[\"array\", \"array\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assign\" })\n\nexports.assigns = makeOp({\n  args:[\"array\", \"scalar\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assigns\" })\n\n\nexports.equals = compile({\n  args:[\"array\", \"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1},\n               {name:\"y\", lvalue:false, rvalue:true, count:1}], \n        body: \"if(x!==y){return false}\", \n        localVars: [], \n        thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"equals\"\n})\n\n\n","\"use strict\"\n\nvar createThunk = require(\"./lib/thunk.js\")\n\nfunction Procedure() {\n  this.argTypes = []\n  this.shimArgs = []\n  this.arrayArgs = []\n  this.arrayBlockIndices = []\n  this.scalarArgs = []\n  this.offsetArgs = []\n  this.offsetArgIndex = []\n  this.indexArgs = []\n  this.shapeArgs = []\n  this.funcName = \"\"\n  this.pre = null\n  this.body = null\n  this.post = null\n  this.debug = false\n}\n\nfunction compileCwise(user_args) {\n  //Create procedure\n  var proc = new Procedure()\n  \n  //Parse blocks\n  proc.pre    = user_args.pre\n  proc.body   = user_args.body\n  proc.post   = user_args.post\n\n  //Parse arguments\n  var proc_args = user_args.args.slice(0)\n  proc.argTypes = proc_args\n  for(var i=0; i<proc_args.length; ++i) {\n    var arg_type = proc_args[i]\n    if(arg_type === \"array\" || (typeof arg_type === \"object\" && arg_type.blockIndices)) {\n      proc.argTypes[i] = \"array\"\n      proc.arrayArgs.push(i)\n      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)\n      proc.shimArgs.push(\"array\" + i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {\n        throw new Error(\"cwise: pre() block may not reference array args\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count>0) {\n        throw new Error(\"cwise: post() block may not reference array args\")\n      }\n    } else if(arg_type === \"scalar\") {\n      proc.scalarArgs.push(i)\n      proc.shimArgs.push(\"scalar\" + i)\n    } else if(arg_type === \"index\") {\n      proc.indexArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {\n        throw new Error(\"cwise: pre() block may not reference array index\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array index\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count > 0) {\n        throw new Error(\"cwise: post() block may not reference array index\")\n      }\n    } else if(arg_type === \"shape\") {\n      proc.shapeArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {\n        throw new Error(\"cwise: pre() block may not write to array shape\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array shape\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].lvalue) {\n        throw new Error(\"cwise: post() block may not write to array shape\")\n      }\n    } else if(typeof arg_type === \"object\" && arg_type.offset) {\n      proc.argTypes[i] = \"offset\"\n      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })\n      proc.offsetArgIndex.push(i)\n    } else {\n      throw new Error(\"cwise: Unknown argument type \" + proc_args[i])\n    }\n  }\n  \n  //Make sure at least one array argument was specified\n  if(proc.arrayArgs.length <= 0) {\n    throw new Error(\"cwise: No array arguments specified\")\n  }\n  \n  //Make sure arguments are correct\n  if(proc.pre.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in pre() block\")\n  }\n  if(proc.body.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in body() block\")\n  }\n  if(proc.post.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in post() block\")\n  }\n\n  //Check debug flag\n  proc.debug = !!user_args.printCode || !!user_args.debug\n  \n  //Retrieve name\n  proc.funcName = user_args.funcName || \"cwise\"\n  \n  //Read in block size\n  proc.blockSize = user_args.blockSize || 64\n\n  return createThunk(proc)\n}\n\nmodule.exports = compileCwise\n","\"use strict\"\n\nfunction unique_pred(list, compare) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b=list[0]\n  for(var i=1; i<len; ++i) {\n    b = a\n    a = list[i]\n    if(compare(a, b)) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique_eq(list) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b = list[0]\n  for(var i=1; i<len; ++i, b=a) {\n    b = a\n    a = list[i]\n    if(a !== b) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique(list, compare, sorted) {\n  if(list.length === 0) {\n    return list\n  }\n  if(compare) {\n    if(!sorted) {\n      list.sort(compare)\n    }\n    return unique_pred(list, compare)\n  }\n  if(!sorted) {\n    list.sort()\n  }\n  return unique_eq(list)\n}\n\nmodule.exports = unique\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (data, metric) {\n  var nSamples = data.shape[0];\n  var distance = (0, _ndarray2.default)(new Float64Array(nSamples * nSamples), [nSamples, nSamples]);\n\n  switch (metric) {\n    case 'euclidean':\n      for (var i = 0; i < nSamples; i++) {\n        for (var j = i + 1; j < nSamples; j++) {\n          var d = euclidean(data.pick(i, null), data.pick(j, null));\n          distance.set(i, j, d);\n          distance.set(j, i, d);\n        }\n      }\n      break;\n    case 'manhattan':\n      for (var i = 0; i < nSamples; i++) {\n        for (var j = i + 1; j < nSamples; j++) {\n          var d = manhattan(data.pick(i, null), data.pick(j, null));\n          distance.set(i, j, d);\n          distance.set(j, i, d);\n        }\n      }\n      break;\n    case 'jaccard':\n      for (var i = 0; i < nSamples; i++) {\n        for (var j = i + 1; j < nSamples; j++) {\n          var d = jaccard(data.pick(i, null), data.pick(j, null));\n          distance.set(i, j, d);\n          distance.set(j, i, d);\n        }\n      }\n      break;\n    case 'dice':\n      for (var i = 0; i < nSamples; i++) {\n        for (var j = i + 1; j < nSamples; j++) {\n          var d = dice(data.pick(i, null), data.pick(j, null));\n          distance.set(i, j, d);\n          distance.set(j, i, d);\n        }\n      }\n      break;\n    default:\n  }\n\n  return distance;\n};\n\nvar _ndarray = require('ndarray');\n\nvar _ndarray2 = _interopRequireDefault(_ndarray);\n\nvar _cwise = require('cwise');\n\nvar _cwise2 = _interopRequireDefault(_cwise);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Euclidean distance\nvar euclidean = (0, _cwise2.default)({\n  args: ['array', 'array'],\n  pre: function pre(a, b) {\n    this.sum = 0.0;\n  },\n  body: function body(a, b) {\n    var d = a - b;\n    this.sum += d * d;\n  },\n  post: function post(a, b) {\n    return Math.sqrt(this.sum);\n  }\n});\n\n// Manhattan distance\nvar manhattan = (0, _cwise2.default)({\n  args: ['array', 'array'],\n  pre: function pre(a, b) {\n    this.sum = 0.0;\n  },\n  body: function body(a, b) {\n    this.sum += Math.abs(a - b);\n  },\n  post: function post(a, b) {\n    return this.sum;\n  }\n});\n\n// Jaccard dissimilarity\nvar jaccard = (0, _cwise2.default)({\n  args: ['array', 'array'],\n  pre: function pre(a, b) {\n    this.tf = 0.0;\n    this.tt = 0.0;\n  },\n  body: function body(a, b) {\n    var a_bool = Math.round(a);\n    var b_bool = Math.round(b);\n    this.tf += +(a_bool != b_bool);\n    this.tt += +(a_bool == 1 && b_bool == 1);\n  },\n  post: function post(a, b) {\n    if (this.tf + this.tt === 0) return 1.0;\n    return this.tf / (this.tf + this.tt);\n  }\n});\n\n// Dice dissimilarity\nvar dice = (0, _cwise2.default)({\n  args: ['array', 'array'],\n  pre: function pre(a, b) {\n    this.tf = 0.0;\n    this.tt = 0.0;\n  },\n  body: function body(a, b) {\n    var a_bool = Math.round(a);\n    var b_bool = Math.round(b);\n    this.tf += +(a_bool != b_bool);\n    this.tt += +(a_bool == 1 && b_bool == 1);\n  },\n  post: function post(a, b) {\n    if (this.tf + this.tt === 0) return 1.0;\n    return this.tf / (this.tf + 2 * this.tt);\n  }\n});\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = require('events');\n\nvar _ndarray = require('ndarray');\n\nvar _ndarray2 = _interopRequireDefault(_ndarray);\n\nvar _ndarrayOps = require('ndarray-ops');\n\nvar _ndarrayOps2 = _interopRequireDefault(_ndarrayOps);\n\nvar _ndarrayPack = require('ndarray-pack');\n\nvar _ndarrayPack2 = _interopRequireDefault(_ndarrayPack);\n\nvar _ndarrayUnpack = require('ndarray-unpack');\n\nvar _ndarrayUnpack2 = _interopRequireDefault(_ndarrayUnpack);\n\nvar _cwise = require('cwise');\n\nvar _cwise2 = _interopRequireDefault(_cwise);\n\nvar _randn = require('./randn');\n\nvar _randn2 = _interopRequireDefault(_randn);\n\nvar _pairwiseDistances = require('./pairwise-distances');\n\nvar _pairwiseDistances2 = _interopRequireDefault(_pairwiseDistances);\n\nvar _jointProbabilities = require('./joint-probabilities');\n\nvar _jointProbabilities2 = _interopRequireDefault(_jointProbabilities);\n\nvar _klDivergence = require('./kl-divergence');\n\nvar _klDivergence2 = _interopRequireDefault(_klDivergence);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TSNE = function (_EventEmitter) {\n  _inherits(TSNE, _EventEmitter);\n\n  function TSNE(config) {\n    _classCallCheck(this, TSNE);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TSNE).call(this));\n\n    config = config || {};\n\n    _this.dim = config.dim || 2;\n    _this.perplexity = config.perplexity || 30.0;\n    _this.earlyExaggeration = config.earlyExaggeration || 4.0;\n    _this.learningRate = config.learningRate || 1000.0;\n    _this.nIter = config.nIter || 1000;\n    _this.metric = config.metric || 'euclidean';\n\n    _this.barneshut = config.barneshut || false;\n\n    _this.inputData = null;\n    _this.outputEmbedding = null;\n    return _this;\n  }\n\n  _createClass(TSNE, [{\n    key: 'init',\n    value: function init(opts) {\n      opts = opts || {};\n\n      var inputData = opts.data || [];\n      var type = opts.type || 'dense';\n\n      // format input data as ndarray\n      if (type === 'dense') {\n\n        this.inputData = (0, _ndarrayPack2.default)(inputData);\n      } else if (type === 'sparse') {\n\n        var shape = [];\n        var size = 1;\n\n        var _loop = function _loop(d) {\n          var dimShape = Math.max.apply(null, inputData.map(function (coord) {\n            return coord[d];\n          })) + 1;\n          shape.push(dimShape);\n          size *= dimShape;\n        };\n\n        for (var d = 0; d < inputData[0].length; d++) {\n          _loop(d);\n        }\n        this.inputData = (0, _ndarray2.default)(new Float64Array(size), shape);\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = inputData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _inputData;\n\n            var coord = _step.value;\n\n            (_inputData = this.inputData).set.apply(_inputData, _toConsumableArray(coord).concat([1]));\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } else {\n        throw new Error('input data type must be dense or sparse');\n      }\n\n      // random initialization of output embedding\n      this.outputEmbedding = (0, _randn2.default)(this.inputData.shape[0], this.dim);\n    }\n  }, {\n    key: 'run',\n    value: function run() {\n      // calculate pairwise distances\n      this.emit('progressStatus', 'Calculating pairwise distances');\n      this.distances = (0, _pairwiseDistances2.default)(this.inputData, this.metric);\n\n      this.emit('progressStatus', 'Calculating joint probabilities');\n      this.alpha = Math.max(this.dim - 1, 1);\n      this.P = (0, _jointProbabilities2.default)(this.distances, this.perplexity);\n\n      var error = Number.MAX_VALUE;\n      var iter = 0;\n\n      // early exaggeration\n      this.emit('progressStatus', 'Early exaggeration with momentum 0.5');\n      _ndarrayOps2.default.mulseq(this.P, this.earlyExaggeration);\n\n      var _gradDesc2 = this._gradDesc(iter, 50, 0.5, 0.0, 0.0);\n\n      var _gradDesc3 = _slicedToArray(_gradDesc2, 2);\n\n      error = _gradDesc3[0];\n      iter = _gradDesc3[1];\n\n      this.emit('progressStatus', 'Early exaggeration with momentum 0.8');\n\n\n      // final optimization\n\n      var _gradDesc4 = this._gradDesc(iter + 1, 100, 0.8, 0.0, 0.0);\n\n      var _gradDesc5 = _slicedToArray(_gradDesc4, 2);\n\n      error = _gradDesc5[0];\n      iter = _gradDesc5[1];\n      this.emit('progressStatus', 'Final optimization with momentum 0.8');\n      _ndarrayOps2.default.divseq(this.P, this.earlyExaggeration);\n\n      var _gradDesc6 = this._gradDesc(iter + 1, this.nIter, 0.8, 1e-6, 1e-6);\n\n      var _gradDesc7 = _slicedToArray(_gradDesc6, 2);\n\n      error = _gradDesc7[0];\n      iter = _gradDesc7[1];\n\n\n      this.emit('progressStatus', 'Optimization end');\n      return [error, iter];\n    }\n  }, {\n    key: 'rerun',\n    value: function rerun() {\n      // random re-initialization of output embedding\n      this.outputEmbedding = (0, _randn2.default)(this.inputData.shape[0], this.dim);\n\n      // re-run with gradient descent\n\n      var _run = this.run();\n\n      var _run2 = _slicedToArray(_run, 2);\n\n      var error = _run2[0];\n      var iter = _run2[1];\n\n\n      return [error, iter];\n    }\n  }, {\n    key: 'getOutput',\n    value: function getOutput() {\n      return (0, _ndarrayUnpack2.default)(this.outputEmbedding);\n    }\n  }, {\n    key: 'getOutputScaled',\n    value: function getOutputScaled() {\n      // scale output embedding to [-1, 1]\n      var outputEmbeddingScaled = (0, _ndarray2.default)(new Float64Array(this.outputEmbedding.size), this.outputEmbedding.shape);\n      var temp = (0, _ndarray2.default)(new Float64Array(this.outputEmbedding.shape[0]), [this.outputEmbedding.shape[0]]);\n\n      for (var d = 0; d < this.outputEmbedding.shape[1]; d++) {\n        var maxVal = _ndarrayOps2.default.sup(_ndarrayOps2.default.abs(temp, this.outputEmbedding.pick(null, d)));\n        _ndarrayOps2.default.divs(outputEmbeddingScaled.pick(null, d), this.outputEmbedding.pick(null, d), maxVal);\n      }\n\n      return (0, _ndarrayUnpack2.default)(outputEmbeddingScaled);\n    }\n  }, {\n    key: '_gradDesc',\n    value: function _gradDesc(iter, nIter, momentum) {\n      var minGradNorm = arguments.length <= 3 || arguments[3] === undefined ? 1e-6 : arguments[3];\n      var minErrorDiff = arguments.length <= 4 || arguments[4] === undefined ? 1e-6 : arguments[4];\n\n      var nIterWithoutProg = 30;\n\n      // initialize updates array\n      var update = (0, _ndarray2.default)(new Float64Array(this.outputEmbedding.size), this.outputEmbedding.shape);\n\n      // initialize gains array\n      var tempArray = new Float64Array(this.outputEmbedding.size);\n      for (var _i = 0; _i < tempArray.length; _i++) {\n        tempArray[_i] = 1.0;\n      }\n      var gains = (0, _ndarray2.default)(tempArray, this.outputEmbedding.shape);\n\n      var error = Number.MAX_VALUE;\n      var bestError = Number.MAX_VALUE;\n      var bestIter = 0;\n\n      var norm = (0, _cwise2.default)({\n        args: ['array'],\n        pre: function pre(a) {\n          this.sum = 0.0;\n        },\n        body: function body(a) {\n          this.sum += a * a;\n        },\n        post: function post(a) {\n          return Math.sqrt(this.sum);\n        }\n      });\n\n      var gainsUpdate = (0, _cwise2.default)({\n        args: ['array', 'array', 'array'],\n        body: function body(c_gains, c_update, c_grad) {\n          if (c_update * c_grad >= 0) {\n            c_gains += 0.05;\n          } else {\n            c_gains *= 0.95;\n          }\n          // set mininum gain 0.01\n          c_gains = Math.max(c_gains, 0.01);\n        }\n      });\n\n      var i = undefined;\n      for (i = iter; i < nIter; i++) {\n        var _divergenceKL = (0, _klDivergence2.default)(this.outputEmbedding, this.P, this.alpha);\n\n        var _divergenceKL2 = _slicedToArray(_divergenceKL, 2);\n\n        var cost = _divergenceKL2[0];\n        var grad = _divergenceKL2[1];\n\n        var errorDiff = Math.abs(cost - error);\n        error = cost;\n        var gradNorm = norm(grad);\n\n        this.emit('progressIter', [i, error, gradNorm]);\n\n        if (error < bestError) {\n          bestError = error;\n          bestIter = i;\n        } else if (i - bestIter > nIterWithoutProg) {\n          break;\n        }\n\n        if (minGradNorm >= gradNorm) break;\n        if (minErrorDiff >= errorDiff) break;\n\n        gainsUpdate(gains, update, grad);\n        _ndarrayOps2.default.muleq(grad, gains);\n\n        var temp = (0, _ndarray2.default)(new Float64Array(grad.size), grad.shape);\n        _ndarrayOps2.default.muls(temp, grad, this.learningRate);\n        _ndarrayOps2.default.mulseq(update, momentum);\n        _ndarrayOps2.default.subeq(update, temp);\n        _ndarrayOps2.default.addeq(this.outputEmbedding, update);\n\n        this.emit('progressData', this.getOutputScaled());\n      }\n\n      return [error, i];\n    }\n  }]);\n\n  return TSNE;\n}(_events.EventEmitter);\n\nexports.default = TSNE;\nmodule.exports = exports['default'];","import TSNE from \"tsne-js\";\n\nexport async function tsne(data, perplexity) {\n  const model = new TSNE({\n    dim: 2,\n    perplexity,\n    nIter: 10,\n    metric: \"euclidean\",\n  });\n  model.init({\n    data,\n    type: \"dense\",\n  });\n  model.run();\n  return model.getOutputScaled();\n}\n\naddEventListener('message', function (e) {var _e$data = e.data,type = _e$data.type,method = _e$data.method,id = _e$data.id,params = _e$data.params,f,p;if (type === 'RPC' && method) {if (f = __webpack_exports__[method]) {p = Promise.resolve().then(function () {return f.apply(__webpack_exports__, params);});} else {p = Promise.reject('No such method');}p.then(function (result) {postMessage({type: 'RPC',id: id,result: result});}).catch(function (e) {var error = {message: e};if (e.stack) {error.message = e.message;error.stack = e.stack;error.name = e.name;}postMessage({type: 'RPC',id: id,error: error});});}});postMessage({type: 'RPC',method: 'ready'});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n","\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","\"use strict\"\n\n// The function below is called when constructing a cwise function object, and does the following:\n// A function object is constructed which accepts as argument a compilation function and returns another function.\n// It is this other function that is eventually returned by createThunk, and this function is the one that actually\n// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\n// The compilation passed to the first function object is used for compiling new functions.\n// Once this function object is created, it is called with compile as argument, where the first argument of compile\n// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\n// So createThunk roughly works like this:\n// function createThunk(proc) {\n//   var thunk = function(compileBound) {\n//     var CACHED = {}\n//     return function(arrays and scalars) {\n//       if (dtype and order of arrays in CACHED) {\n//         var func = CACHED[dtype and order of arrays]\n//       } else {\n//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\n//       }\n//       return func(arrays and scalars)\n//     }\n//   }\n//   return thunk(compile.bind1(proc))\n// }\n\nvar compile = require(\"./compile.js\")\n\nfunction createThunk(proc) {\n  var code = [\"'use strict'\", \"var CACHED={}\"]\n  var vars = []\n  var thunkName = proc.funcName + \"_cwise_thunk\"\n  \n  //Build thunk\n  code.push([\"return function \", thunkName, \"(\", proc.shimArgs.join(\",\"), \"){\"].join(\"\"))\n  var typesig = []\n  var string_typesig = []\n  var proc_args = [[\"array\",proc.arrayArgs[0],\".shape.slice(\", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\n                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(\",\"+proc.arrayBlockIndices[0]+\")\"):\")\"].join(\"\")]\n  var shapeLengthConditions = [], shapeConditions = []\n  // Process array arguments\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    var j = proc.arrayArgs[i]\n    vars.push([\"t\", j, \"=array\", j, \".dtype,\",\n               \"r\", j, \"=array\", j, \".order\"].join(\"\"))\n    typesig.push(\"t\" + j)\n    typesig.push(\"r\" + j)\n    string_typesig.push(\"t\"+j)\n    string_typesig.push(\"r\"+j+\".join()\")\n    proc_args.push(\"array\" + j + \".data\")\n    proc_args.push(\"array\" + j + \".stride\")\n    proc_args.push(\"array\" + j + \".offset|0\")\n    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)\n      shapeLengthConditions.push(\"array\" + proc.arrayArgs[0] + \".shape.length===array\" + j + \".shape.length+\" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))\n      shapeConditions.push(\"array\" + proc.arrayArgs[0] + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[0]) + \"]===array\" + j + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[i]) + \"]\")\n    }\n  }\n  // Check for shape equality\n  if (proc.arrayArgs.length > 1) {\n    code.push(\"if (!(\" + shapeLengthConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\")\n    code.push(\"for(var shapeIndex=array\" + proc.arrayArgs[0] + \".shape.length-\" + Math.abs(proc.arrayBlockIndices[0]) + \"; shapeIndex-->0;) {\")\n    code.push(\"if (!(\" + shapeConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same shape!')\")\n    code.push(\"}\")\n  }\n  // Process scalar arguments\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    proc_args.push(\"scalar\" + proc.scalarArgs[i])\n  }\n  // Check for cached function (and if not present, generate it)\n  vars.push([\"type=[\", string_typesig.join(\",\"), \"].join()\"].join(\"\"))\n  vars.push(\"proc=CACHED[type]\")\n  code.push(\"var \" + vars.join(\",\"))\n  \n  code.push([\"if(!proc){\",\n             \"CACHED[type]=proc=compile([\", typesig.join(\",\"), \"])}\",\n             \"return proc(\", proc_args.join(\",\"), \")}\"].join(\"\"))\n\n  if(proc.debug) {\n    console.log(\"-----Generated thunk:\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  //Compile thunk\n  var thunk = new Function(\"compile\", code.join(\"\\n\"))\n  return thunk(compile.bind(undefined, proc))\n}\n\nmodule.exports = createThunk\n","\"use strict\"\n\nvar uniq = require(\"uniq\")\n\n// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)\n// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of \"pointers\" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.\nfunction innerFill(order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , has_index = proc.indexArgs.length>0\n    , code = []\n    , vars = []\n    , idx=0, pidx=0, i, j\n  for(i=0; i<dimension; ++i) { // Iteration variables\n    vars.push([\"i\",i,\"=0\"].join(\"\"))\n  }\n  //Compute scan deltas\n  for(j=0; j<nargs; ++j) {\n    for(i=0; i<dimension; ++i) {\n      pidx = idx\n      idx = order[i]\n      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride\n        vars.push([\"d\",j,\"s\",i,\"=t\",j,\"p\",idx].join(\"\"))\n      } else { // For other dimensions the delta is basically the stride minus something which essentially \"rewinds\" the previous (more inner) dimension\n        vars.push([\"d\",j,\"s\",i,\"=(t\",j,\"p\",idx,\"-s\",pidx,\"*t\",j,\"p\",pidx,\")\"].join(\"\"))\n      }\n    }\n  }\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }  \n  //Scan loop\n  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards\n    idx = order[i]\n    code.push([\"for(i\",i,\"=0;i\",i,\"<s\",idx,\";++i\",i,\"){\"].join(\"\"))\n  }\n  //Push body of inner loop\n  code.push(body)\n  //Advance scan pointers\n  for(i=0; i<dimension; ++i) {\n    pidx = idx\n    idx = order[i]\n    for(j=0; j<nargs; ++j) {\n      code.push([\"p\",j,\"+=d\",j,\"s\",i].join(\"\"))\n    }\n    if(has_index) {\n      if(i > 0) {\n        code.push([\"index[\",pidx,\"]-=s\",pidx].join(\"\"))\n      }\n      code.push([\"++index[\",idx,\"]\"].join(\"\"))\n    }\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n// Generate \"outer\" loops that loop over blocks of data, applying \"inner\" loops to the blocks by manipulating the local variables in such a way that the inner loop only \"sees\" the current block.\n// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.\n//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and \"shape\" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.\nfunction outerFill(matched, order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , blockSize = proc.blockSize\n    , has_index = proc.indexArgs.length > 0\n    , code = []\n  for(var i=0; i<nargs; ++i) {\n    code.push([\"var offset\",i,\"=p\",i].join(\"\"))\n  }\n  //Generate loops for unmatched dimensions\n  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)\n  // TODO: It would be nice if the order in which these loops are placed would also be somehow \"optimal\" (at the very least we should check that it really doesn't hurt us if they're not).\n  for(var i=matched; i<dimension; ++i) {\n    code.push([\"for(var j\"+i+\"=SS[\", order[i], \"]|0;j\", i, \">0;){\"].join(\"\")) // Iterate back to front\n    code.push([\"if(j\",i,\"<\",blockSize,\"){\"].join(\"\")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).\n    code.push([\"s\",order[i],\"=j\",i].join(\"\"))\n    code.push([\"j\",i,\"=0\"].join(\"\"))\n    code.push([\"}else{s\",order[i],\"=\",blockSize].join(\"\"))\n    code.push([\"j\",i,\"-=\",blockSize,\"}\"].join(\"\"))\n    if(has_index) {\n      code.push([\"index[\",order[i],\"]=j\",i].join(\"\"))\n    }\n  }\n  for(var i=0; i<nargs; ++i) {\n    var indexStr = [\"offset\"+i]\n    for(var j=matched; j<dimension; ++j) {\n      indexStr.push([\"j\",j,\"*t\",i,\"p\",order[j]].join(\"\"))\n    }\n    code.push([\"p\",i,\"=(\",indexStr.join(\"+\"),\")\"].join(\"\"))\n  }\n  code.push(innerFill(order, proc, body))\n  for(var i=matched; i<dimension; ++i) {\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n//Count the number of compatible inner orders\n// This is the length of the longest common prefix of the arrays in orders.\n// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.\n// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.\nfunction countMatches(orders) {\n  var matched = 0, dimension = orders[0].length\n  while(matched < dimension) {\n    for(var j=1; j<orders.length; ++j) {\n      if(orders[j][matched] !== orders[0][matched]) {\n        return matched\n      }\n    }\n    ++matched\n  }\n  return matched\n}\n\n//Processes a block according to the given data types\n// Replaces variable names by different ones, either \"local\" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.\nfunction processBlock(block, proc, dtypes) {\n  var code = block.body\n  var pre = []\n  var post = []\n  for(var i=0; i<block.args.length; ++i) {\n    var carg = block.args[i]\n    if(carg.count <= 0) {\n      continue\n    }\n    var re = new RegExp(carg.name, \"g\")\n    var ptrStr = \"\"\n    var arrNum = proc.arrayArgs.indexOf(i)\n    switch(proc.argTypes[i]) {\n      case \"offset\":\n        var offArgIndex = proc.offsetArgIndex.indexOf(i)\n        var offArg = proc.offsetArgs[offArgIndex]\n        arrNum = offArg.array\n        ptrStr = \"+q\" + offArgIndex // Adds offset to the \"pointer\" in the array\n      case \"array\":\n        ptrStr = \"p\" + arrNum + ptrStr\n        var localStr = \"l\" + i\n        var arrStr = \"a\" + arrNum\n        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array\n          if(carg.count === 1) { // Argument/array used only once(?)\n            if(dtypes[arrNum] === \"generic\") {\n              if(carg.lvalue) {\n                pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n                code = code.replace(re, localStr)\n                post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n              } else {\n                code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n              }\n            } else {\n              code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n            }\n          } else if(dtypes[arrNum] === \"generic\") {\n            pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            }\n          } else {\n            pre.push([\"var \", localStr, \"=\", arrStr, \"[\", ptrStr, \"]\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \"[\", ptrStr, \"]=\", localStr].join(\"\"))\n            }\n          }\n        } else { // Argument to body is a \"block\"\n          var reStrArr = [carg.name], ptrStrArr = [ptrStr]\n          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {\n            reStrArr.push(\"\\\\s*\\\\[([^\\\\]]+)\\\\]\")\n            ptrStrArr.push(\"$\" + (j+1) + \"*t\" + arrNum + \"b\" + j) // Matched index times stride\n          }\n          re = new RegExp(reStrArr.join(\"\"), \"g\")\n          ptrStr = ptrStrArr.join(\"+\")\n          if(dtypes[arrNum] === \"generic\") {\n            /*if(carg.lvalue) {\n              pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n              code = code.replace(re, localStr)\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            } else {\n              code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n            }*/\n            throw new Error(\"cwise: Generic arrays not supported in combination with blocks!\")\n          } else {\n            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.\n            code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n          }\n        }\n      break\n      case \"scalar\":\n        code = code.replace(re, \"Y\" + proc.scalarArgs.indexOf(i))\n      break\n      case \"index\":\n        code = code.replace(re, \"index\")\n      break\n      case \"shape\":\n        code = code.replace(re, \"shape\")\n      break\n    }\n  }\n  return [pre.join(\"\\n\"), code, post.join(\"\\n\")].join(\"\\n\").trim()\n}\n\nfunction typeSummary(dtypes) {\n  var summary = new Array(dtypes.length)\n  var allEqual = true\n  for(var i=0; i<dtypes.length; ++i) {\n    var t = dtypes[i]\n    var digits = t.match(/\\d+/)\n    if(!digits) {\n      digits = \"\"\n    } else {\n      digits = digits[0]\n    }\n    if(t.charAt(0) === 0) {\n      summary[i] = \"u\" + t.charAt(1) + digits\n    } else {\n      summary[i] = t.charAt(0) + digits\n    }\n    if(i > 0) {\n      allEqual = allEqual && summary[i] === summary[i-1]\n    }\n  }\n  if(allEqual) {\n    return summary[0]\n  }\n  return summary.join(\"\")\n}\n\n//Generates a cwise operator\nfunction generateCWiseOp(proc, typesig) {\n\n  //Compute dimension\n  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.\n  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0\n  var orders = new Array(proc.arrayArgs.length)\n  var dtypes = new Array(proc.arrayArgs.length)\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    dtypes[i] = typesig[2*i]\n    orders[i] = typesig[2*i+1]\n  }\n  \n  //Determine where block and loop indices start and end\n  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks\n  var loopBegin = [], loopEnd = [] // These indices are iterated over\n  var loopOrders = [] // orders restricted to the loop indices\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    if (proc.arrayBlockIndices[i]<0) {\n      loopBegin.push(0)\n      loopEnd.push(dimension)\n      blockBegin.push(dimension)\n      blockEnd.push(dimension+proc.arrayBlockIndices[i])\n    } else {\n      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative\n      loopEnd.push(proc.arrayBlockIndices[i]+dimension)\n      blockBegin.push(0)\n      blockEnd.push(proc.arrayBlockIndices[i])\n    }\n    var newOrder = []\n    for(var j=0; j<orders[i].length; j++) {\n      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {\n        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.\n      }\n    }\n    loopOrders.push(newOrder)\n  }\n\n  //First create arguments for procedure\n  var arglist = [\"SS\"] // SS is the overall shape over which we iterate\n  var code = [\"'use strict'\"]\n  var vars = []\n  \n  for(var j=0; j<dimension; ++j) {\n    vars.push([\"s\", j, \"=SS[\", j, \"]\"].join(\"\")) // The limits for each dimension.\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    arglist.push(\"a\"+i) // Actual data array\n    arglist.push(\"t\"+i) // Strides\n    arglist.push(\"p\"+i) // Offset in the array at which the data starts (also used for iterating over the data)\n    \n    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping\n      vars.push([\"t\",i,\"p\",j,\"=t\",i,\"[\",loopBegin[i]+j,\"]\"].join(\"\"))\n    }\n    \n    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration\n      vars.push([\"t\",i,\"b\",j,\"=t\",i,\"[\",blockBegin[i]+j,\"]\"].join(\"\"))\n    }\n  }\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    arglist.push(\"Y\" + i)\n  }\n  if(proc.shapeArgs.length > 0) {\n    vars.push(\"shape=SS.slice(0)\") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)\n  }\n  if(proc.indexArgs.length > 0) {\n    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.\n    var zeros = new Array(dimension)\n    for(var i=0; i<dimension; ++i) {\n      zeros[i] = \"0\"\n    }\n    vars.push([\"index=[\", zeros.join(\",\"), \"]\"].join(\"\"))\n  }\n  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations\n    var off_arg = proc.offsetArgs[i]\n    var init_string = []\n    for(var j=0; j<off_arg.offset.length; ++j) {\n      if(off_arg.offset[j] === 0) {\n        continue\n      } else if(off_arg.offset[j] === 1) {\n        init_string.push([\"t\", off_arg.array, \"p\", j].join(\"\"))      \n      } else {\n        init_string.push([off_arg.offset[j], \"*t\", off_arg.array, \"p\", j].join(\"\"))\n      }\n    }\n    if(init_string.length === 0) {\n      vars.push(\"q\" + i + \"=0\")\n    } else {\n      vars.push([\"q\", i, \"=\", init_string.join(\"+\")].join(\"\"))\n    }\n  }\n\n  //Prepare this variables\n  var thisVars = uniq([].concat(proc.pre.thisVars)\n                      .concat(proc.body.thisVars)\n                      .concat(proc.post.thisVars))\n  vars = vars.concat(thisVars)\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    code.push(\"p\"+i+\"|=0\")\n  }\n  \n  //Inline prelude\n  if(proc.pre.body.length > 3) {\n    code.push(processBlock(proc.pre, proc, dtypes))\n  }\n\n  //Process body\n  var body = processBlock(proc.body, proc, dtypes)\n  var matched = countMatches(loopOrders)\n  if(matched < dimension) {\n    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.\n  } else {\n    code.push(innerFill(loopOrders[0], proc, body))\n  }\n\n  //Inline epilog\n  if(proc.post.body.length > 3) {\n    code.push(processBlock(proc.post, proc, dtypes))\n  }\n  \n  if(proc.debug) {\n    console.log(\"-----Generated cwise routine for \", typesig, \":\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  var loopName = [(proc.funcName||\"unnamed\"), \"_cwise_loop_\", orders[0].join(\"s\"),\"m\",matched,typeSummary(dtypes)].join(\"\")\n  var f = new Function([\"function \",loopName,\"(\", arglist.join(\",\"),\"){\", code.join(\"\\n\"),\"} return \", loopName].join(\"\"))\n  return f()\n}\nmodule.exports = generateCWiseOp\n","\"use strict\"\n\nvar ndarray = require(\"ndarray\")\nvar do_convert = require(\"./doConvert.js\")\n\nmodule.exports = function convert(arr, result) {\n  var shape = [], c = arr, sz = 1\n  while(Array.isArray(c)) {\n    shape.push(c.length)\n    sz *= c.length\n    c = c[0]\n  }\n  if(shape.length === 0) {\n    return ndarray()\n  }\n  if(!result) {\n    result = ndarray(new Float64Array(sz), shape)\n  }\n  do_convert(result, arr)\n  return result\n}\n","module.exports=require('cwise-compiler')({\"args\":[\"array\",\"scalar\",\"index\"],\"pre\":{\"body\":\"{}\",\"args\":[],\"thisVars\":[],\"localVars\":[]},\"body\":{\"body\":\"{\\nvar _inline_1_v=_inline_1_arg1_,_inline_1_i\\nfor(_inline_1_i=0;_inline_1_i<_inline_1_arg2_.length-1;++_inline_1_i) {\\n_inline_1_v=_inline_1_v[_inline_1_arg2_[_inline_1_i]]\\n}\\n_inline_1_arg0_=_inline_1_v[_inline_1_arg2_[_inline_1_arg2_.length-1]]\\n}\",\"args\":[{\"name\":\"_inline_1_arg0_\",\"lvalue\":true,\"rvalue\":false,\"count\":1},{\"name\":\"_inline_1_arg1_\",\"lvalue\":false,\"rvalue\":true,\"count\":1},{\"name\":\"_inline_1_arg2_\",\"lvalue\":false,\"rvalue\":true,\"count\":4}],\"thisVars\":[],\"localVars\":[\"_inline_1_i\",\"_inline_1_v\"]},\"post\":{\"body\":\"{}\",\"args\":[],\"thisVars\":[],\"localVars\":[]},\"funcName\":\"convert\",\"blockSize\":64})\n","\"use strict\"\n\nvar dup = require(\"dup\")\nvar cwise = require(\"cwise\")\n\nvar do_unpack = cwise({ \n  args: [\"array\", \"scalar\", \"index\"],\n  body: function unpackCwise(arr, a, idx) {\n    var v = a, i\n    for(i=0;i<idx.length-1;++i) {\n      v=v[idx[i]]\n    }\n    v[idx[idx.length-1]]=arr\n  }\n})\n\nmodule.exports = function unpack(arr) {\n  var result = dup(arr.shape)\n  do_unpack(arr, result)\n  return result\n}\n","\"use strict\"\n\nfunction dupe_array(count, value, i) {\n  var c = count[i]|0\n  if(c <= 0) {\n    return []\n  }\n  var result = new Array(c), j\n  if(i === count.length-1) {\n    for(j=0; j<c; ++j) {\n      result[j] = value\n    }\n  } else {\n    for(j=0; j<c; ++j) {\n      result[j] = dupe_array(count, value, i+1)\n    }\n  }\n  return result\n}\n\nfunction dupe_number(count, value) {\n  var result, i\n  result = new Array(count)\n  for(i=0; i<count; ++i) {\n    result[i] = value\n  }\n  return result\n}\n\nfunction dupe(count, value) {\n  if(typeof value === \"undefined\") {\n    value = 0\n  }\n  switch(typeof count) {\n    case \"number\":\n      if(count > 0) {\n        return dupe_number(count|0, value)\n      }\n    break\n    case \"object\":\n      if(typeof (count.length) === \"number\") {\n        return dupe_array(count, value, 0)\n      }\n    break\n  }\n  return []\n}\n\nmodule.exports = dupe","\"use strict\"\n\nvar esprima = require(\"esprima\")\nvar uniq = require(\"uniq\")\n\nvar PREFIX_COUNTER = 0\n\nfunction CompiledArgument(name, lvalue, rvalue) {\n  this.name = name\n  this.lvalue = lvalue\n  this.rvalue = rvalue\n  this.count = 0\n}\n\nfunction CompiledRoutine(body, args, thisVars, localVars) {\n  this.body = body\n  this.args = args\n  this.thisVars = thisVars\n  this.localVars = localVars\n}\n\nfunction isGlobal(identifier) {\n  if(identifier === \"eval\") {\n    throw new Error(\"cwise-parser: eval() not allowed\")\n  }\n  if(typeof window !== \"undefined\") {\n    return identifier in window\n  } else if(typeof global !== \"undefined\") {\n    return identifier in global\n  } else if(typeof self !== \"undefined\") {\n    return identifier in self\n  } else {\n    return false\n  }\n}\n\nfunction getArgNames(ast) {\n  var params = ast.body[0].expression.callee.params\n  var names = new Array(params.length)\n  for(var i=0; i<params.length; ++i) {\n    names[i] = params[i].name\n  }\n  return names\n}\n\nfunction preprocess(func) {\n  var src = [\"(\", func, \")()\"].join(\"\")\n  var ast = esprima.parse(src, { range: true })\n  \n  //Compute new prefix\n  var prefix = \"_inline_\" + (PREFIX_COUNTER++) + \"_\"\n  \n  //Parse out arguments\n  var argNames = getArgNames(ast)\n  var compiledArgs = new Array(argNames.length)\n  for(var i=0; i<argNames.length; ++i) {\n    compiledArgs[i] = new CompiledArgument([prefix, \"arg\", i, \"_\"].join(\"\"), false, false)\n  }\n  \n  //Create temporary data structure for source rewriting\n  var exploded = new Array(src.length)\n  for(var i=0, n=src.length; i<n; ++i) {\n    exploded[i] = src.charAt(i)\n  }\n  \n  //Local variables\n  var localVars = []\n  var thisVars = []\n  var computedThis = false\n  \n  //Retrieves a local variable\n  function createLocal(id) {\n    var nstr = prefix + id.replace(/\\_/g, \"__\")\n    localVars.push(nstr)\n    return nstr\n  }\n  \n  //Creates a this variable\n  function createThisVar(id) {\n    var nstr = \"this_\" + id.replace(/\\_/g, \"__\")\n    thisVars.push(nstr)\n    return nstr\n  }\n  \n  //Rewrites an ast node\n  function rewrite(node, nstr) {\n    var lo = node.range[0], hi = node.range[1]\n    for(var i=lo+1; i<hi; ++i) {\n      exploded[i] = \"\"\n    }\n    exploded[lo] = nstr\n  }\n  \n  //Remove any underscores\n  function escapeString(str) {\n    return \"'\"+(str.replace(/\\_/g, \"\\\\_\").replace(/\\'/g, \"\\'\"))+\"'\"\n  }\n  \n  //Returns the source of an identifier\n  function source(node) {\n    return exploded.slice(node.range[0], node.range[1]).join(\"\")\n  }\n  \n  //Computes the usage of a node\n  var LVALUE = 1\n  var RVALUE = 2\n  function getUsage(node) {\n    if(node.parent.type === \"AssignmentExpression\") {\n      if(node.parent.left === node) {\n        if(node.parent.operator === \"=\") {\n          return LVALUE\n        }\n        return LVALUE|RVALUE\n      }\n    }\n    if(node.parent.type === \"UpdateExpression\") {\n      return LVALUE|RVALUE\n    }\n    return RVALUE\n  }\n  \n  //Handle visiting a node\n  (function visit(node, parent) {\n    node.parent = parent\n    if(node.type === \"MemberExpression\") {\n      //Handle member expression\n      if(node.computed) {\n        visit(node.object, node)\n        visit(node.property, node)\n      } else if(node.object.type === \"ThisExpression\") {\n        rewrite(node, createThisVar(node.property.name))\n      } else {\n        visit(node.object, node)\n      }\n    } else if(node.type === \"ThisExpression\") {\n      throw new Error(\"cwise-parser: Computed this is not allowed\")\n    } else if(node.type === \"Identifier\") {\n      //Handle identifier\n      var name = node.name\n      var argNo = argNames.indexOf(name)\n      if(argNo >= 0) {\n        var carg = compiledArgs[argNo]\n        var usage = getUsage(node)\n        if(usage & LVALUE) {\n          carg.lvalue = true\n        }\n        if(usage & RVALUE) {\n          carg.rvalue = true\n        }\n        ++carg.count\n        rewrite(node, carg.name)\n      } else if(isGlobal(name)) {\n        //Don't rewrite globals\n      } else {\n        rewrite(node, createLocal(name))\n      }\n    } else if(node.type === \"Literal\") {\n      if(typeof node.value === \"string\") {\n        rewrite(node, escapeString(node.value))\n      }\n    } else if(node.type === \"WithStatement\") {\n      throw new Error(\"cwise-parser: with() statements not allowed\")\n    } else {\n      //Visit all children\n      var keys = Object.keys(node)\n      for(var i=0, n=keys.length; i<n; ++i) {\n        if(keys[i] === \"parent\") {\n          continue\n        }\n        var value = node[keys[i]]\n        if(value) {\n          if(value instanceof Array) {\n            for(var j=0; j<value.length; ++j) {\n              if(value[j] && typeof value[j].type === \"string\") {\n                visit(value[j], node)\n              }\n            }\n          } else if(typeof value.type === \"string\") {\n            visit(value, node)\n          }\n        }\n      }\n    }\n  })(ast.body[0].expression.callee.body, undefined)\n  \n  //Remove duplicate variables\n  uniq(localVars)\n  uniq(thisVars)\n  \n  //Return body\n  var routine = new CompiledRoutine(source(ast.body[0].expression.callee.body), compiledArgs, thisVars, localVars)\n  return routine\n}\n\nmodule.exports = preprocess","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/*jslint bitwise:true plusplus:true */\n/*global esprima:true, define:true, exports:true, window: true,\nthrowErrorTolerant: true,\nthrowError: true, generateStatement: true, peek: true,\nparseAssignmentExpression: true, parseBlock: true, parseExpression: true,\nparseFunctionDeclaration: true, parseFunctionExpression: true,\nparseFunctionSourceElements: true, parseVariableIdentifier: true,\nparseLeftHandSideExpression: true,\nparseUnaryExpression: true,\nparseStatement: true, parseSourceElement: true */\n\n(function (root, factory) {\n    'use strict';\n\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,\n    // Rhino, and plain browser loading.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.esprima = {}));\n    }\n}(this, function (exports) {\n    'use strict';\n\n    var Token,\n        TokenName,\n        FnExprTokens,\n        Syntax,\n        PropertyKind,\n        Messages,\n        Regex,\n        SyntaxTreeDelegate,\n        source,\n        strict,\n        index,\n        lineNumber,\n        lineStart,\n        length,\n        delegate,\n        lookahead,\n        state,\n        extra;\n\n    Token = {\n        BooleanLiteral: 1,\n        EOF: 2,\n        Identifier: 3,\n        Keyword: 4,\n        NullLiteral: 5,\n        NumericLiteral: 6,\n        Punctuator: 7,\n        StringLiteral: 8,\n        RegularExpression: 9\n    };\n\n    TokenName = {};\n    TokenName[Token.BooleanLiteral] = 'Boolean';\n    TokenName[Token.EOF] = '<end>';\n    TokenName[Token.Identifier] = 'Identifier';\n    TokenName[Token.Keyword] = 'Keyword';\n    TokenName[Token.NullLiteral] = 'Null';\n    TokenName[Token.NumericLiteral] = 'Numeric';\n    TokenName[Token.Punctuator] = 'Punctuator';\n    TokenName[Token.StringLiteral] = 'String';\n    TokenName[Token.RegularExpression] = 'RegularExpression';\n\n    // A function following one of those tokens is an expression.\n    FnExprTokens = ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n                    'return', 'case', 'delete', 'throw', 'void',\n                    // assignment operators\n                    '=', '+=', '-=', '*=', '/=', '%=', '<<=', '>>=', '>>>=',\n                    '&=', '|=', '^=', ',',\n                    // binary/unary operators\n                    '+', '-', '*', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n                    '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n                    '<=', '<', '>', '!=', '!=='];\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        ArrayExpression: 'ArrayExpression',\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        Program: 'Program',\n        Property: 'Property',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement'\n    };\n\n    PropertyKind = {\n        Data: 1,\n        Get: 2,\n        Set: 4\n    };\n\n    // Error messages should be identical to V8.\n    Messages = {\n        UnexpectedToken:  'Unexpected token %0',\n        UnexpectedNumber:  'Unexpected number',\n        UnexpectedString:  'Unexpected string',\n        UnexpectedIdentifier:  'Unexpected identifier',\n        UnexpectedReserved:  'Unexpected reserved word',\n        UnexpectedEOS:  'Unexpected end of input',\n        NewlineAfterThrow:  'Illegal newline after throw',\n        InvalidRegExp: 'Invalid regular expression',\n        UnterminatedRegExp:  'Invalid regular expression: missing /',\n        InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n        InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n        MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n        NoCatchOrFinally:  'Missing catch or finally after try',\n        UnknownLabel: 'Undefined label \\'%0\\'',\n        Redeclaration: '%0 \\'%1\\' has already been declared',\n        IllegalContinue: 'Illegal continue statement',\n        IllegalBreak: 'Illegal break statement',\n        IllegalReturn: 'Illegal return statement',\n        StrictModeWith:  'Strict mode code may not include a with statement',\n        StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n        StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n        StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n        StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n        StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n        StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n        StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n        StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n        AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n        AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n        StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n        StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n        StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n        StrictReservedWord:  'Use of future reserved word in strict mode'\n    };\n\n    // See also tools/generate-unicode-regex.py.\n    Regex = {\n        NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n        NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0\\u08A2-\\u08AC\\u08E4-\\u08FE\\u0900-\\u0963\\u0966-\\u096F\\u0971-\\u0977\\u0979-\\u097F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1D00-\\u1DE6\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA697\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7B\\uAA80-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE26\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n    };\n\n    // Ensure the condition is true, otherwise throw an error.\n    // This is only to have a better contract semantic, i.e. another safety net\n    // to catch a logic error. The condition shall be fulfilled in normal case.\n    // Do NOT use this to enforce a certain condition on any user input.\n\n    function assert(condition, message) {\n        /* istanbul ignore if */\n        if (!condition) {\n            throw new Error('ASSERT: ' + message);\n        }\n    }\n\n    function isDecimalDigit(ch) {\n        return (ch >= 48 && ch <= 57);   // 0..9\n    }\n\n    function isHexDigit(ch) {\n        return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n    }\n\n    function isOctalDigit(ch) {\n        return '01234567'.indexOf(ch) >= 0;\n    }\n\n\n    // 7.2 White Space\n\n    function isWhiteSpace(ch) {\n        return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n            (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function isIdentifierStart(ch) {\n        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n            (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n            (ch === 0x5C) ||                      // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n    }\n\n    function isIdentifierPart(ch) {\n        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n            (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n            (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n            (ch === 0x5C) ||                      // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n    }\n\n    // 7.6.1.2 Future Reserved Words\n\n    function isFutureReservedWord(id) {\n        switch (id) {\n        case 'class':\n        case 'enum':\n        case 'export':\n        case 'extends':\n        case 'import':\n        case 'super':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isStrictModeReservedWord(id) {\n        switch (id) {\n        case 'implements':\n        case 'interface':\n        case 'package':\n        case 'private':\n        case 'protected':\n        case 'public':\n        case 'static':\n        case 'yield':\n        case 'let':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isRestrictedWord(id) {\n        return id === 'eval' || id === 'arguments';\n    }\n\n    // 7.6.1.1 Keywords\n\n    function isKeyword(id) {\n        if (strict && isStrictModeReservedWord(id)) {\n            return true;\n        }\n\n        // 'const' is specialized as Keyword in V8.\n        // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n        // Some others are from future reserved words.\n\n        switch (id.length) {\n        case 2:\n            return (id === 'if') || (id === 'in') || (id === 'do');\n        case 3:\n            return (id === 'var') || (id === 'for') || (id === 'new') ||\n                (id === 'try') || (id === 'let');\n        case 4:\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\n                (id === 'void') || (id === 'with') || (id === 'enum');\n        case 5:\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n                (id === 'throw') || (id === 'const') || (id === 'yield') ||\n                (id === 'class') || (id === 'super');\n        case 6:\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n                (id === 'switch') || (id === 'export') || (id === 'import');\n        case 7:\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\n        case 8:\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n        case 10:\n            return (id === 'instanceof');\n        default:\n            return false;\n        }\n    }\n\n    // 7.4 Comments\n\n    function addComment(type, value, start, end, loc) {\n        var comment, attacher;\n\n        assert(typeof start === 'number', 'Comment must have valid position');\n\n        // Because the way the actual token is scanned, often the comments\n        // (if any) are skipped twice during the lexical analysis.\n        // Thus, we need to skip adding a comment if the comment array already\n        // handled it.\n        if (state.lastCommentStart >= start) {\n            return;\n        }\n        state.lastCommentStart = start;\n\n        comment = {\n            type: type,\n            value: value\n        };\n        if (extra.range) {\n            comment.range = [start, end];\n        }\n        if (extra.loc) {\n            comment.loc = loc;\n        }\n        extra.comments.push(comment);\n        if (extra.attachComment) {\n            extra.leadingComments.push(comment);\n            extra.trailingComments.push(comment);\n        }\n    }\n\n    function skipSingleLineComment(offset) {\n        var start, loc, ch, comment;\n\n        start = index - offset;\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart - offset\n            }\n        };\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            ++index;\n            if (isLineTerminator(ch)) {\n                if (extra.comments) {\n                    comment = source.slice(start + offset, index - 1);\n                    loc.end = {\n                        line: lineNumber,\n                        column: index - lineStart - 1\n                    };\n                    addComment('Line', comment, start, index - 1, loc);\n                }\n                if (ch === 13 && source.charCodeAt(index) === 10) {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n                return;\n            }\n        }\n\n        if (extra.comments) {\n            comment = source.slice(start + offset, index);\n            loc.end = {\n                line: lineNumber,\n                column: index - lineStart\n            };\n            addComment('Line', comment, start, index, loc);\n        }\n    }\n\n    function skipMultiLineComment() {\n        var start, loc, ch, comment;\n\n        if (extra.comments) {\n            start = index - 2;\n            loc = {\n                start: {\n                    line: lineNumber,\n                    column: index - lineStart - 2\n                }\n            };\n        }\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (isLineTerminator(ch)) {\n                if (ch === 0x0D && source.charCodeAt(index + 1) === 0x0A) {\n                    ++index;\n                }\n                ++lineNumber;\n                ++index;\n                lineStart = index;\n                if (index >= length) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            } else if (ch === 0x2A) {\n                // Block comment ends with '*/'.\n                if (source.charCodeAt(index + 1) === 0x2F) {\n                    ++index;\n                    ++index;\n                    if (extra.comments) {\n                        comment = source.slice(start + 2, index - 2);\n                        loc.end = {\n                            line: lineNumber,\n                            column: index - lineStart\n                        };\n                        addComment('Block', comment, start, index, loc);\n                    }\n                    return;\n                }\n                ++index;\n            } else {\n                ++index;\n            }\n        }\n\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n    }\n\n    function skipComment() {\n        var ch, start;\n\n        start = (index === 0);\n        while (index < length) {\n            ch = source.charCodeAt(index);\n\n            if (isWhiteSpace(ch)) {\n                ++index;\n            } else if (isLineTerminator(ch)) {\n                ++index;\n                if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n                start = true;\n            } else if (ch === 0x2F) { // U+002F is '/'\n                ch = source.charCodeAt(index + 1);\n                if (ch === 0x2F) {\n                    ++index;\n                    ++index;\n                    skipSingleLineComment(2);\n                    start = true;\n                } else if (ch === 0x2A) {  // U+002A is '*'\n                    ++index;\n                    ++index;\n                    skipMultiLineComment();\n                } else {\n                    break;\n                }\n            } else if (start && ch === 0x2D) { // U+002D is '-'\n                // U+003E is '>'\n                if ((source.charCodeAt(index + 1) === 0x2D) && (source.charCodeAt(index + 2) === 0x3E)) {\n                    // '-->' is a single-line comment\n                    index += 3;\n                    skipSingleLineComment(3);\n                } else {\n                    break;\n                }\n            } else if (ch === 0x3C) { // U+003C is '<'\n                if (source.slice(index + 1, index + 4) === '!--') {\n                    ++index; // `<`\n                    ++index; // `!`\n                    ++index; // `-`\n                    ++index; // `-`\n                    skipSingleLineComment(4);\n                } else {\n                    break;\n                }\n            } else {\n                break;\n            }\n        }\n    }\n\n    function scanHexEscape(prefix) {\n        var i, len, ch, code = 0;\n\n        len = (prefix === 'u') ? 4 : 2;\n        for (i = 0; i < len; ++i) {\n            if (index < length && isHexDigit(source[index])) {\n                ch = source[index++];\n                code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n            } else {\n                return '';\n            }\n        }\n        return String.fromCharCode(code);\n    }\n\n    function getEscapedIdentifier() {\n        var ch, id;\n\n        ch = source.charCodeAt(index++);\n        id = String.fromCharCode(ch);\n\n        // '\\u' (U+005C, U+0075) denotes an escaped character.\n        if (ch === 0x5C) {\n            if (source.charCodeAt(index) !== 0x75) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n            ++index;\n            ch = scanHexEscape('u');\n            if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n            id = ch;\n        }\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (!isIdentifierPart(ch)) {\n                break;\n            }\n            ++index;\n            id += String.fromCharCode(ch);\n\n            // '\\u' (U+005C, U+0075) denotes an escaped character.\n            if (ch === 0x5C) {\n                id = id.substr(0, id.length - 1);\n                if (source.charCodeAt(index) !== 0x75) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n                ++index;\n                ch = scanHexEscape('u');\n                if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n                id += ch;\n            }\n        }\n\n        return id;\n    }\n\n    function getIdentifier() {\n        var start, ch;\n\n        start = index++;\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (ch === 0x5C) {\n                // Blackslash (U+005C) marks Unicode escape sequence.\n                index = start;\n                return getEscapedIdentifier();\n            }\n            if (isIdentifierPart(ch)) {\n                ++index;\n            } else {\n                break;\n            }\n        }\n\n        return source.slice(start, index);\n    }\n\n    function scanIdentifier() {\n        var start, id, type;\n\n        start = index;\n\n        // Backslash (U+005C) starts an escaped character.\n        id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n        // There is no keyword or literal with only one character.\n        // Thus, it must be an identifier.\n        if (id.length === 1) {\n            type = Token.Identifier;\n        } else if (isKeyword(id)) {\n            type = Token.Keyword;\n        } else if (id === 'null') {\n            type = Token.NullLiteral;\n        } else if (id === 'true' || id === 'false') {\n            type = Token.BooleanLiteral;\n        } else {\n            type = Token.Identifier;\n        }\n\n        return {\n            type: type,\n            value: id,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n\n    // 7.7 Punctuators\n\n    function scanPunctuator() {\n        var start = index,\n            code = source.charCodeAt(index),\n            code2,\n            ch1 = source[index],\n            ch2,\n            ch3,\n            ch4;\n\n        switch (code) {\n\n        // Check for most common single-character punctuators.\n        case 0x2E:  // . dot\n        case 0x28:  // ( open bracket\n        case 0x29:  // ) close bracket\n        case 0x3B:  // ; semicolon\n        case 0x2C:  // , comma\n        case 0x7B:  // { open curly brace\n        case 0x7D:  // } close curly brace\n        case 0x5B:  // [\n        case 0x5D:  // ]\n        case 0x3A:  // :\n        case 0x3F:  // ?\n        case 0x7E:  // ~\n            ++index;\n            if (extra.tokenize) {\n                if (code === 0x28) {\n                    extra.openParenToken = extra.tokens.length;\n                } else if (code === 0x7B) {\n                    extra.openCurlyToken = extra.tokens.length;\n                }\n            }\n            return {\n                type: Token.Punctuator,\n                value: String.fromCharCode(code),\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n\n        default:\n            code2 = source.charCodeAt(index + 1);\n\n            // '=' (U+003D) marks an assignment or comparison operator.\n            if (code2 === 0x3D) {\n                switch (code) {\n                case 0x2B:  // +\n                case 0x2D:  // -\n                case 0x2F:  // /\n                case 0x3C:  // <\n                case 0x3E:  // >\n                case 0x5E:  // ^\n                case 0x7C:  // |\n                case 0x25:  // %\n                case 0x26:  // &\n                case 0x2A:  // *\n                    index += 2;\n                    return {\n                        type: Token.Punctuator,\n                        value: String.fromCharCode(code) + String.fromCharCode(code2),\n                        lineNumber: lineNumber,\n                        lineStart: lineStart,\n                        start: start,\n                        end: index\n                    };\n\n                case 0x21: // !\n                case 0x3D: // =\n                    index += 2;\n\n                    // !== and ===\n                    if (source.charCodeAt(index) === 0x3D) {\n                        ++index;\n                    }\n                    return {\n                        type: Token.Punctuator,\n                        value: source.slice(start, index),\n                        lineNumber: lineNumber,\n                        lineStart: lineStart,\n                        start: start,\n                        end: index\n                    };\n                }\n            }\n        }\n\n        // 4-character punctuator: >>>=\n\n        ch4 = source.substr(index, 4);\n\n        if (ch4 === '>>>=') {\n            index += 4;\n            return {\n                type: Token.Punctuator,\n                value: ch4,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        // 3-character punctuators: === !== >>> <<= >>=\n\n        ch3 = ch4.substr(0, 3);\n\n        if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: ch3,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        // Other 2-character punctuators: ++ -- << >> && ||\n        ch2 = ch3.substr(0, 2);\n\n        if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n            index += 2;\n            return {\n                type: Token.Punctuator,\n                value: ch2,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        // 1-character punctuators: < > = ! + - * % & | ^ /\n        if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n            ++index;\n            return {\n                type: Token.Punctuator,\n                value: ch1,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n    }\n\n    // 7.8.3 Numeric Literals\n\n    function scanHexLiteral(start) {\n        var number = '';\n\n        while (index < length) {\n            if (!isHexDigit(source[index])) {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (number.length === 0) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt('0x' + number, 16),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    function scanOctalLiteral(start) {\n        var number = '0' + source[index++];\n        while (index < length) {\n            if (!isOctalDigit(source[index])) {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt(number, 8),\n            octal: true,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    function isImplicitOctalLiteral() {\n        var i, ch;\n\n        // Implicit octal, unless there is a non-octal digit.\n        // (Annex B.1.1 on Numeric Literals)\n        for (i = index + 1; i < length; ++i) {\n            ch = source[i];\n            if (ch === '8' || ch === '9') {\n                return false;\n            }\n            if (!isOctalDigit(ch)) {\n                return true;\n            }\n        }\n\n        return true;\n    }\n\n    function scanNumericLiteral() {\n        var number, start, ch;\n\n        ch = source[index];\n        assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n            'Numeric literal must start with a decimal digit or a decimal point');\n\n        start = index;\n        number = '';\n        if (ch !== '.') {\n            number = source[index++];\n            ch = source[index];\n\n            // Hex number starts with '0x'.\n            // Octal number starts with '0'.\n            if (number === '0') {\n                if (ch === 'x' || ch === 'X') {\n                    ++index;\n                    return scanHexLiteral(start);\n                }\n                if (isOctalDigit(ch)) {\n                    if (isImplicitOctalLiteral()) {\n                        return scanOctalLiteral(start);\n                    }\n                }\n            }\n\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === '.') {\n            number += source[index++];\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === 'e' || ch === 'E') {\n            number += source[index++];\n\n            ch = source[index];\n            if (ch === '+' || ch === '-') {\n                number += source[index++];\n            }\n            if (isDecimalDigit(source.charCodeAt(index))) {\n                while (isDecimalDigit(source.charCodeAt(index))) {\n                    number += source[index++];\n                }\n            } else {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseFloat(number),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    // 7.8.4 String Literals\n\n    function scanStringLiteral() {\n        var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n        startLineNumber = lineNumber;\n        startLineStart = lineStart;\n\n        quote = source[index];\n        assert((quote === '\\'' || quote === '\"'),\n            'String literal must starts with a quote');\n\n        start = index;\n        ++index;\n\n        while (index < length) {\n            ch = source[index++];\n\n            if (ch === quote) {\n                quote = '';\n                break;\n            } else if (ch === '\\\\') {\n                ch = source[index++];\n                if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                    case 'u':\n                    case 'x':\n                        restore = index;\n                        unescaped = scanHexEscape(ch);\n                        if (unescaped) {\n                            str += unescaped;\n                        } else {\n                            index = restore;\n                            str += ch;\n                        }\n                        break;\n                    case 'n':\n                        str += '\\n';\n                        break;\n                    case 'r':\n                        str += '\\r';\n                        break;\n                    case 't':\n                        str += '\\t';\n                        break;\n                    case 'b':\n                        str += '\\b';\n                        break;\n                    case 'f':\n                        str += '\\f';\n                        break;\n                    case 'v':\n                        str += '\\x0B';\n                        break;\n\n                    default:\n                        if (isOctalDigit(ch)) {\n                            code = '01234567'.indexOf(ch);\n\n                            // \\0 is not octal escape sequence\n                            if (code !== 0) {\n                                octal = true;\n                            }\n\n                            if (index < length && isOctalDigit(source[index])) {\n                                octal = true;\n                                code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                                // 3 digits are only allowed when string starts\n                                // with 0, 1, 2, 3\n                                if ('0123'.indexOf(ch) >= 0 &&\n                                        index < length &&\n                                        isOctalDigit(source[index])) {\n                                    code = code * 8 + '01234567'.indexOf(source[index++]);\n                                }\n                            }\n                            str += String.fromCharCode(code);\n                        } else {\n                            str += ch;\n                        }\n                        break;\n                    }\n                } else {\n                    ++lineNumber;\n                    if (ch ===  '\\r' && source[index] === '\\n') {\n                        ++index;\n                    }\n                    lineStart = index;\n                }\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                break;\n            } else {\n                str += ch;\n            }\n        }\n\n        if (quote !== '') {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.StringLiteral,\n            value: str,\n            octal: octal,\n            startLineNumber: startLineNumber,\n            startLineStart: startLineStart,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    function testRegExp(pattern, flags) {\n        var value;\n        try {\n            value = new RegExp(pattern, flags);\n        } catch (e) {\n            throwError({}, Messages.InvalidRegExp);\n        }\n        return value;\n    }\n\n    function scanRegExpBody() {\n        var ch, str, classMarker, terminated, body;\n\n        ch = source[index];\n        assert(ch === '/', 'Regular expression literal must start with a slash');\n        str = source[index++];\n\n        classMarker = false;\n        terminated = false;\n        while (index < length) {\n            ch = source[index++];\n            str += ch;\n            if (ch === '\\\\') {\n                ch = source[index++];\n                // ECMA-262 7.8.5\n                if (isLineTerminator(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnterminatedRegExp);\n                }\n                str += ch;\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                throwError({}, Messages.UnterminatedRegExp);\n            } else if (classMarker) {\n                if (ch === ']') {\n                    classMarker = false;\n                }\n            } else {\n                if (ch === '/') {\n                    terminated = true;\n                    break;\n                } else if (ch === '[') {\n                    classMarker = true;\n                }\n            }\n        }\n\n        if (!terminated) {\n            throwError({}, Messages.UnterminatedRegExp);\n        }\n\n        // Exclude leading and trailing slash.\n        body = str.substr(1, str.length - 2);\n        return {\n            value: body,\n            literal: str\n        };\n    }\n\n    function scanRegExpFlags() {\n        var ch, str, flags, restore;\n\n        str = '';\n        flags = '';\n        while (index < length) {\n            ch = source[index];\n            if (!isIdentifierPart(ch.charCodeAt(0))) {\n                break;\n            }\n\n            ++index;\n            if (ch === '\\\\' && index < length) {\n                ch = source[index];\n                if (ch === 'u') {\n                    ++index;\n                    restore = index;\n                    ch = scanHexEscape('u');\n                    if (ch) {\n                        flags += ch;\n                        for (str += '\\\\u'; restore < index; ++restore) {\n                            str += source[restore];\n                        }\n                    } else {\n                        index = restore;\n                        flags += 'u';\n                        str += '\\\\u';\n                    }\n                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n                } else {\n                    str += '\\\\';\n                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            } else {\n                flags += ch;\n                str += ch;\n            }\n        }\n\n        return {\n            value: flags,\n            literal: str\n        };\n    }\n\n    function scanRegExp() {\n        var start, body, flags, pattern, value;\n\n        lookahead = null;\n        skipComment();\n        start = index;\n\n        body = scanRegExpBody();\n        flags = scanRegExpFlags();\n        value = testRegExp(body.value, flags.value);\n\n        if (extra.tokenize) {\n            return {\n                type: Token.RegularExpression,\n                value: value,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        return {\n            literal: body.literal + flags.literal,\n            value: value,\n            start: start,\n            end: index\n        };\n    }\n\n    function collectRegex() {\n        var pos, loc, regex, token;\n\n        skipComment();\n\n        pos = index;\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart\n            }\n        };\n\n        regex = scanRegExp();\n        loc.end = {\n            line: lineNumber,\n            column: index - lineStart\n        };\n\n        /* istanbul ignore next */\n        if (!extra.tokenize) {\n            // Pop the previous token, which is likely '/' or '/='\n            if (extra.tokens.length > 0) {\n                token = extra.tokens[extra.tokens.length - 1];\n                if (token.range[0] === pos && token.type === 'Punctuator') {\n                    if (token.value === '/' || token.value === '/=') {\n                        extra.tokens.pop();\n                    }\n                }\n            }\n\n            extra.tokens.push({\n                type: 'RegularExpression',\n                value: regex.literal,\n                range: [pos, index],\n                loc: loc\n            });\n        }\n\n        return regex;\n    }\n\n    function isIdentifierName(token) {\n        return token.type === Token.Identifier ||\n            token.type === Token.Keyword ||\n            token.type === Token.BooleanLiteral ||\n            token.type === Token.NullLiteral;\n    }\n\n    function advanceSlash() {\n        var prevToken,\n            checkToken;\n        // Using the following algorithm:\n        // https://github.com/mozilla/sweet.js/wiki/design\n        prevToken = extra.tokens[extra.tokens.length - 1];\n        if (!prevToken) {\n            // Nothing before that: it cannot be a division.\n            return collectRegex();\n        }\n        if (prevToken.type === 'Punctuator') {\n            if (prevToken.value === ']') {\n                return scanPunctuator();\n            }\n            if (prevToken.value === ')') {\n                checkToken = extra.tokens[extra.openParenToken - 1];\n                if (checkToken &&\n                        checkToken.type === 'Keyword' &&\n                        (checkToken.value === 'if' ||\n                         checkToken.value === 'while' ||\n                         checkToken.value === 'for' ||\n                         checkToken.value === 'with')) {\n                    return collectRegex();\n                }\n                return scanPunctuator();\n            }\n            if (prevToken.value === '}') {\n                // Dividing a function by anything makes little sense,\n                // but we have to check for that.\n                if (extra.tokens[extra.openCurlyToken - 3] &&\n                        extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                    // Anonymous function.\n                    checkToken = extra.tokens[extra.openCurlyToken - 4];\n                    if (!checkToken) {\n                        return scanPunctuator();\n                    }\n                } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                        extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                    // Named function.\n                    checkToken = extra.tokens[extra.openCurlyToken - 5];\n                    if (!checkToken) {\n                        return collectRegex();\n                    }\n                } else {\n                    return scanPunctuator();\n                }\n                // checkToken determines whether the function is\n                // a declaration or an expression.\n                if (FnExprTokens.indexOf(checkToken.value) >= 0) {\n                    // It is an expression.\n                    return scanPunctuator();\n                }\n                // It is a declaration.\n                return collectRegex();\n            }\n            return collectRegex();\n        }\n        if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n            return collectRegex();\n        }\n        return scanPunctuator();\n    }\n\n    function advance() {\n        var ch;\n\n        skipComment();\n\n        if (index >= length) {\n            return {\n                type: Token.EOF,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: index,\n                end: index\n            };\n        }\n\n        ch = source.charCodeAt(index);\n\n        if (isIdentifierStart(ch)) {\n            return scanIdentifier();\n        }\n\n        // Very common: ( and ) and ;\n        if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n            return scanPunctuator();\n        }\n\n        // String literal starts with single quote (U+0027) or double quote (U+0022).\n        if (ch === 0x27 || ch === 0x22) {\n            return scanStringLiteral();\n        }\n\n\n        // Dot (.) U+002E can also start a floating-point number, hence the need\n        // to check the next character.\n        if (ch === 0x2E) {\n            if (isDecimalDigit(source.charCodeAt(index + 1))) {\n                return scanNumericLiteral();\n            }\n            return scanPunctuator();\n        }\n\n        if (isDecimalDigit(ch)) {\n            return scanNumericLiteral();\n        }\n\n        // Slash (/) U+002F can also start a regex.\n        if (extra.tokenize && ch === 0x2F) {\n            return advanceSlash();\n        }\n\n        return scanPunctuator();\n    }\n\n    function collectToken() {\n        var loc, token, range, value;\n\n        skipComment();\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart\n            }\n        };\n\n        token = advance();\n        loc.end = {\n            line: lineNumber,\n            column: index - lineStart\n        };\n\n        if (token.type !== Token.EOF) {\n            value = source.slice(token.start, token.end);\n            extra.tokens.push({\n                type: TokenName[token.type],\n                value: value,\n                range: [token.start, token.end],\n                loc: loc\n            });\n        }\n\n        return token;\n    }\n\n    function lex() {\n        var token;\n\n        token = lookahead;\n        index = token.end;\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n\n        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n        index = token.end;\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n\n        return token;\n    }\n\n    function peek() {\n        var pos, line, start;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n    }\n\n    function Position(line, column) {\n        this.line = line;\n        this.column = column;\n    }\n\n    function SourceLocation(startLine, startColumn, line, column) {\n        this.start = new Position(startLine, startColumn);\n        this.end = new Position(line, column);\n    }\n\n    SyntaxTreeDelegate = {\n\n        name: 'SyntaxTree',\n\n        processComment: function (node) {\n            var lastChild, trailingComments;\n\n            if (node.type === Syntax.Program) {\n                if (node.body.length > 0) {\n                    return;\n                }\n            }\n\n            if (extra.trailingComments.length > 0) {\n                if (extra.trailingComments[0].range[0] >= node.range[1]) {\n                    trailingComments = extra.trailingComments;\n                    extra.trailingComments = [];\n                } else {\n                    extra.trailingComments.length = 0;\n                }\n            } else {\n                if (extra.bottomRightStack.length > 0 &&\n                        extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments &&\n                        extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments[0].range[0] >= node.range[1]) {\n                    trailingComments = extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;\n                    delete extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;\n                }\n            }\n\n            // Eating the stack.\n            while (extra.bottomRightStack.length > 0 && extra.bottomRightStack[extra.bottomRightStack.length - 1].range[0] >= node.range[0]) {\n                lastChild = extra.bottomRightStack.pop();\n            }\n\n            if (lastChild) {\n                if (lastChild.leadingComments && lastChild.leadingComments[lastChild.leadingComments.length - 1].range[1] <= node.range[0]) {\n                    node.leadingComments = lastChild.leadingComments;\n                    delete lastChild.leadingComments;\n                }\n            } else if (extra.leadingComments.length > 0 && extra.leadingComments[extra.leadingComments.length - 1].range[1] <= node.range[0]) {\n                node.leadingComments = extra.leadingComments;\n                extra.leadingComments = [];\n            }\n\n\n            if (trailingComments) {\n                node.trailingComments = trailingComments;\n            }\n\n            extra.bottomRightStack.push(node);\n        },\n\n        markEnd: function (node, startToken) {\n            if (extra.range) {\n                node.range = [startToken.start, index];\n            }\n            if (extra.loc) {\n                node.loc = new SourceLocation(\n                    startToken.startLineNumber === undefined ?  startToken.lineNumber : startToken.startLineNumber,\n                    startToken.start - (startToken.startLineStart === undefined ?  startToken.lineStart : startToken.startLineStart),\n                    lineNumber,\n                    index - lineStart\n                );\n                this.postProcess(node);\n            }\n\n            if (extra.attachComment) {\n                this.processComment(node);\n            }\n            return node;\n        },\n\n        postProcess: function (node) {\n            if (extra.source) {\n                node.loc.source = extra.source;\n            }\n            return node;\n        },\n\n        createArrayExpression: function (elements) {\n            return {\n                type: Syntax.ArrayExpression,\n                elements: elements\n            };\n        },\n\n        createAssignmentExpression: function (operator, left, right) {\n            return {\n                type: Syntax.AssignmentExpression,\n                operator: operator,\n                left: left,\n                right: right\n            };\n        },\n\n        createBinaryExpression: function (operator, left, right) {\n            var type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression :\n                        Syntax.BinaryExpression;\n            return {\n                type: type,\n                operator: operator,\n                left: left,\n                right: right\n            };\n        },\n\n        createBlockStatement: function (body) {\n            return {\n                type: Syntax.BlockStatement,\n                body: body\n            };\n        },\n\n        createBreakStatement: function (label) {\n            return {\n                type: Syntax.BreakStatement,\n                label: label\n            };\n        },\n\n        createCallExpression: function (callee, args) {\n            return {\n                type: Syntax.CallExpression,\n                callee: callee,\n                'arguments': args\n            };\n        },\n\n        createCatchClause: function (param, body) {\n            return {\n                type: Syntax.CatchClause,\n                param: param,\n                body: body\n            };\n        },\n\n        createConditionalExpression: function (test, consequent, alternate) {\n            return {\n                type: Syntax.ConditionalExpression,\n                test: test,\n                consequent: consequent,\n                alternate: alternate\n            };\n        },\n\n        createContinueStatement: function (label) {\n            return {\n                type: Syntax.ContinueStatement,\n                label: label\n            };\n        },\n\n        createDebuggerStatement: function () {\n            return {\n                type: Syntax.DebuggerStatement\n            };\n        },\n\n        createDoWhileStatement: function (body, test) {\n            return {\n                type: Syntax.DoWhileStatement,\n                body: body,\n                test: test\n            };\n        },\n\n        createEmptyStatement: function () {\n            return {\n                type: Syntax.EmptyStatement\n            };\n        },\n\n        createExpressionStatement: function (expression) {\n            return {\n                type: Syntax.ExpressionStatement,\n                expression: expression\n            };\n        },\n\n        createForStatement: function (init, test, update, body) {\n            return {\n                type: Syntax.ForStatement,\n                init: init,\n                test: test,\n                update: update,\n                body: body\n            };\n        },\n\n        createForInStatement: function (left, right, body) {\n            return {\n                type: Syntax.ForInStatement,\n                left: left,\n                right: right,\n                body: body,\n                each: false\n            };\n        },\n\n        createFunctionDeclaration: function (id, params, defaults, body) {\n            return {\n                type: Syntax.FunctionDeclaration,\n                id: id,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: null,\n                generator: false,\n                expression: false\n            };\n        },\n\n        createFunctionExpression: function (id, params, defaults, body) {\n            return {\n                type: Syntax.FunctionExpression,\n                id: id,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: null,\n                generator: false,\n                expression: false\n            };\n        },\n\n        createIdentifier: function (name) {\n            return {\n                type: Syntax.Identifier,\n                name: name\n            };\n        },\n\n        createIfStatement: function (test, consequent, alternate) {\n            return {\n                type: Syntax.IfStatement,\n                test: test,\n                consequent: consequent,\n                alternate: alternate\n            };\n        },\n\n        createLabeledStatement: function (label, body) {\n            return {\n                type: Syntax.LabeledStatement,\n                label: label,\n                body: body\n            };\n        },\n\n        createLiteral: function (token) {\n            return {\n                type: Syntax.Literal,\n                value: token.value,\n                raw: source.slice(token.start, token.end)\n            };\n        },\n\n        createMemberExpression: function (accessor, object, property) {\n            return {\n                type: Syntax.MemberExpression,\n                computed: accessor === '[',\n                object: object,\n                property: property\n            };\n        },\n\n        createNewExpression: function (callee, args) {\n            return {\n                type: Syntax.NewExpression,\n                callee: callee,\n                'arguments': args\n            };\n        },\n\n        createObjectExpression: function (properties) {\n            return {\n                type: Syntax.ObjectExpression,\n                properties: properties\n            };\n        },\n\n        createPostfixExpression: function (operator, argument) {\n            return {\n                type: Syntax.UpdateExpression,\n                operator: operator,\n                argument: argument,\n                prefix: false\n            };\n        },\n\n        createProgram: function (body) {\n            return {\n                type: Syntax.Program,\n                body: body\n            };\n        },\n\n        createProperty: function (kind, key, value) {\n            return {\n                type: Syntax.Property,\n                key: key,\n                value: value,\n                kind: kind\n            };\n        },\n\n        createReturnStatement: function (argument) {\n            return {\n                type: Syntax.ReturnStatement,\n                argument: argument\n            };\n        },\n\n        createSequenceExpression: function (expressions) {\n            return {\n                type: Syntax.SequenceExpression,\n                expressions: expressions\n            };\n        },\n\n        createSwitchCase: function (test, consequent) {\n            return {\n                type: Syntax.SwitchCase,\n                test: test,\n                consequent: consequent\n            };\n        },\n\n        createSwitchStatement: function (discriminant, cases) {\n            return {\n                type: Syntax.SwitchStatement,\n                discriminant: discriminant,\n                cases: cases\n            };\n        },\n\n        createThisExpression: function () {\n            return {\n                type: Syntax.ThisExpression\n            };\n        },\n\n        createThrowStatement: function (argument) {\n            return {\n                type: Syntax.ThrowStatement,\n                argument: argument\n            };\n        },\n\n        createTryStatement: function (block, guardedHandlers, handlers, finalizer) {\n            return {\n                type: Syntax.TryStatement,\n                block: block,\n                guardedHandlers: guardedHandlers,\n                handlers: handlers,\n                finalizer: finalizer\n            };\n        },\n\n        createUnaryExpression: function (operator, argument) {\n            if (operator === '++' || operator === '--') {\n                return {\n                    type: Syntax.UpdateExpression,\n                    operator: operator,\n                    argument: argument,\n                    prefix: true\n                };\n            }\n            return {\n                type: Syntax.UnaryExpression,\n                operator: operator,\n                argument: argument,\n                prefix: true\n            };\n        },\n\n        createVariableDeclaration: function (declarations, kind) {\n            return {\n                type: Syntax.VariableDeclaration,\n                declarations: declarations,\n                kind: kind\n            };\n        },\n\n        createVariableDeclarator: function (id, init) {\n            return {\n                type: Syntax.VariableDeclarator,\n                id: id,\n                init: init\n            };\n        },\n\n        createWhileStatement: function (test, body) {\n            return {\n                type: Syntax.WhileStatement,\n                test: test,\n                body: body\n            };\n        },\n\n        createWithStatement: function (object, body) {\n            return {\n                type: Syntax.WithStatement,\n                object: object,\n                body: body\n            };\n        }\n    };\n\n    // Return true if there is a line terminator before the next token.\n\n    function peekLineTerminator() {\n        var pos, line, start, found;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n        skipComment();\n        found = lineNumber !== line;\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n\n        return found;\n    }\n\n    // Throw an exception\n\n    function throwError(token, messageFormat) {\n        var error,\n            args = Array.prototype.slice.call(arguments, 2),\n            msg = messageFormat.replace(\n                /%(\\d)/g,\n                function (whole, index) {\n                    assert(index < args.length, 'Message reference must be in range');\n                    return args[index];\n                }\n            );\n\n        if (typeof token.lineNumber === 'number') {\n            error = new Error('Line ' + token.lineNumber + ': ' + msg);\n            error.index = token.start;\n            error.lineNumber = token.lineNumber;\n            error.column = token.start - lineStart + 1;\n        } else {\n            error = new Error('Line ' + lineNumber + ': ' + msg);\n            error.index = index;\n            error.lineNumber = lineNumber;\n            error.column = index - lineStart + 1;\n        }\n\n        error.description = msg;\n        throw error;\n    }\n\n    function throwErrorTolerant() {\n        try {\n            throwError.apply(null, arguments);\n        } catch (e) {\n            if (extra.errors) {\n                extra.errors.push(e);\n            } else {\n                throw e;\n            }\n        }\n    }\n\n\n    // Throw an exception because of the token.\n\n    function throwUnexpected(token) {\n        if (token.type === Token.EOF) {\n            throwError(token, Messages.UnexpectedEOS);\n        }\n\n        if (token.type === Token.NumericLiteral) {\n            throwError(token, Messages.UnexpectedNumber);\n        }\n\n        if (token.type === Token.StringLiteral) {\n            throwError(token, Messages.UnexpectedString);\n        }\n\n        if (token.type === Token.Identifier) {\n            throwError(token, Messages.UnexpectedIdentifier);\n        }\n\n        if (token.type === Token.Keyword) {\n            if (isFutureReservedWord(token.value)) {\n                throwError(token, Messages.UnexpectedReserved);\n            } else if (strict && isStrictModeReservedWord(token.value)) {\n                throwErrorTolerant(token, Messages.StrictReservedWord);\n                return;\n            }\n            throwError(token, Messages.UnexpectedToken, token.value);\n        }\n\n        // BooleanLiteral, NullLiteral, or Punctuator.\n        throwError(token, Messages.UnexpectedToken, token.value);\n    }\n\n    // Expect the next token to match the specified punctuator.\n    // If not, an exception will be thrown.\n\n    function expect(value) {\n        var token = lex();\n        if (token.type !== Token.Punctuator || token.value !== value) {\n            throwUnexpected(token);\n        }\n    }\n\n    // Expect the next token to match the specified keyword.\n    // If not, an exception will be thrown.\n\n    function expectKeyword(keyword) {\n        var token = lex();\n        if (token.type !== Token.Keyword || token.value !== keyword) {\n            throwUnexpected(token);\n        }\n    }\n\n    // Return true if the next token matches the specified punctuator.\n\n    function match(value) {\n        return lookahead.type === Token.Punctuator && lookahead.value === value;\n    }\n\n    // Return true if the next token matches the specified keyword\n\n    function matchKeyword(keyword) {\n        return lookahead.type === Token.Keyword && lookahead.value === keyword;\n    }\n\n    // Return true if the next token is an assignment operator\n\n    function matchAssign() {\n        var op;\n\n        if (lookahead.type !== Token.Punctuator) {\n            return false;\n        }\n        op = lookahead.value;\n        return op === '=' ||\n            op === '*=' ||\n            op === '/=' ||\n            op === '%=' ||\n            op === '+=' ||\n            op === '-=' ||\n            op === '<<=' ||\n            op === '>>=' ||\n            op === '>>>=' ||\n            op === '&=' ||\n            op === '^=' ||\n            op === '|=';\n    }\n\n    function consumeSemicolon() {\n        var line, oldIndex = index, oldLineNumber = lineNumber,\n            oldLineStart = lineStart, oldLookahead = lookahead;\n\n        // Catch the very common case first: immediately a semicolon (U+003B).\n        if (source.charCodeAt(index) === 0x3B || match(';')) {\n            lex();\n            return;\n        }\n\n        line = lineNumber;\n        skipComment();\n        if (lineNumber !== line) {\n            index = oldIndex;\n            lineNumber = oldLineNumber;\n            lineStart = oldLineStart;\n            lookahead = oldLookahead;\n            return;\n        }\n\n        if (lookahead.type !== Token.EOF && !match('}')) {\n            throwUnexpected(lookahead);\n        }\n    }\n\n    // Return true if provided expression is LeftHandSideExpression\n\n    function isLeftHandSide(expr) {\n        return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n    }\n\n    // 11.1.4 Array Initialiser\n\n    function parseArrayInitialiser() {\n        var elements = [], startToken;\n\n        startToken = lookahead;\n        expect('[');\n\n        while (!match(']')) {\n            if (match(',')) {\n                lex();\n                elements.push(null);\n            } else {\n                elements.push(parseAssignmentExpression());\n\n                if (!match(']')) {\n                    expect(',');\n                }\n            }\n        }\n\n        lex();\n\n        return delegate.markEnd(delegate.createArrayExpression(elements), startToken);\n    }\n\n    // 11.1.5 Object Initialiser\n\n    function parsePropertyFunction(param, first) {\n        var previousStrict, body, startToken;\n\n        previousStrict = strict;\n        startToken = lookahead;\n        body = parseFunctionSourceElements();\n        if (first && strict && isRestrictedWord(param[0].name)) {\n            throwErrorTolerant(first, Messages.StrictParamName);\n        }\n        strict = previousStrict;\n        return delegate.markEnd(delegate.createFunctionExpression(null, param, [], body), startToken);\n    }\n\n    function parseObjectPropertyKey() {\n        var token, startToken;\n\n        startToken = lookahead;\n        token = lex();\n\n        // Note: This function is called only from parseObjectProperty(), where\n        // EOF and Punctuator tokens are already filtered out.\n\n        if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n            if (strict && token.octal) {\n                throwErrorTolerant(token, Messages.StrictOctalLiteral);\n            }\n            return delegate.markEnd(delegate.createLiteral(token), startToken);\n        }\n\n        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n    }\n\n    function parseObjectProperty() {\n        var token, key, id, value, param, startToken;\n\n        token = lookahead;\n        startToken = lookahead;\n\n        if (token.type === Token.Identifier) {\n\n            id = parseObjectPropertyKey();\n\n            // Property Assignment: Getter and Setter.\n\n            if (token.value === 'get' && !match(':')) {\n                key = parseObjectPropertyKey();\n                expect('(');\n                expect(')');\n                value = parsePropertyFunction([]);\n                return delegate.markEnd(delegate.createProperty('get', key, value), startToken);\n            }\n            if (token.value === 'set' && !match(':')) {\n                key = parseObjectPropertyKey();\n                expect('(');\n                token = lookahead;\n                if (token.type !== Token.Identifier) {\n                    expect(')');\n                    throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n                    value = parsePropertyFunction([]);\n                } else {\n                    param = [ parseVariableIdentifier() ];\n                    expect(')');\n                    value = parsePropertyFunction(param, token);\n                }\n                return delegate.markEnd(delegate.createProperty('set', key, value), startToken);\n            }\n            expect(':');\n            value = parseAssignmentExpression();\n            return delegate.markEnd(delegate.createProperty('init', id, value), startToken);\n        }\n        if (token.type === Token.EOF || token.type === Token.Punctuator) {\n            throwUnexpected(token);\n        } else {\n            key = parseObjectPropertyKey();\n            expect(':');\n            value = parseAssignmentExpression();\n            return delegate.markEnd(delegate.createProperty('init', key, value), startToken);\n        }\n    }\n\n    function parseObjectInitialiser() {\n        var properties = [], property, name, key, kind, map = {}, toString = String, startToken;\n\n        startToken = lookahead;\n\n        expect('{');\n\n        while (!match('}')) {\n            property = parseObjectProperty();\n\n            if (property.key.type === Syntax.Identifier) {\n                name = property.key.name;\n            } else {\n                name = toString(property.key.value);\n            }\n            kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n            key = '$' + name;\n            if (Object.prototype.hasOwnProperty.call(map, key)) {\n                if (map[key] === PropertyKind.Data) {\n                    if (strict && kind === PropertyKind.Data) {\n                        throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                    } else if (kind !== PropertyKind.Data) {\n                        throwErrorTolerant({}, Messages.AccessorDataProperty);\n                    }\n                } else {\n                    if (kind === PropertyKind.Data) {\n                        throwErrorTolerant({}, Messages.AccessorDataProperty);\n                    } else if (map[key] & kind) {\n                        throwErrorTolerant({}, Messages.AccessorGetSet);\n                    }\n                }\n                map[key] |= kind;\n            } else {\n                map[key] = kind;\n            }\n\n            properties.push(property);\n\n            if (!match('}')) {\n                expect(',');\n            }\n        }\n\n        expect('}');\n\n        return delegate.markEnd(delegate.createObjectExpression(properties), startToken);\n    }\n\n    // 11.1.6 The Grouping Operator\n\n    function parseGroupExpression() {\n        var expr;\n\n        expect('(');\n\n        expr = parseExpression();\n\n        expect(')');\n\n        return expr;\n    }\n\n\n    // 11.1 Primary Expressions\n\n    function parsePrimaryExpression() {\n        var type, token, expr, startToken;\n\n        if (match('(')) {\n            return parseGroupExpression();\n        }\n\n        if (match('[')) {\n            return parseArrayInitialiser();\n        }\n\n        if (match('{')) {\n            return parseObjectInitialiser();\n        }\n\n        type = lookahead.type;\n        startToken = lookahead;\n\n        if (type === Token.Identifier) {\n            expr =  delegate.createIdentifier(lex().value);\n        } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n            if (strict && lookahead.octal) {\n                throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n            }\n            expr = delegate.createLiteral(lex());\n        } else if (type === Token.Keyword) {\n            if (matchKeyword('function')) {\n                return parseFunctionExpression();\n            }\n            if (matchKeyword('this')) {\n                lex();\n                expr = delegate.createThisExpression();\n            } else {\n                throwUnexpected(lex());\n            }\n        } else if (type === Token.BooleanLiteral) {\n            token = lex();\n            token.value = (token.value === 'true');\n            expr = delegate.createLiteral(token);\n        } else if (type === Token.NullLiteral) {\n            token = lex();\n            token.value = null;\n            expr = delegate.createLiteral(token);\n        } else if (match('/') || match('/=')) {\n            if (typeof extra.tokens !== 'undefined') {\n                expr = delegate.createLiteral(collectRegex());\n            } else {\n                expr = delegate.createLiteral(scanRegExp());\n            }\n            peek();\n        } else {\n            throwUnexpected(lex());\n        }\n\n        return delegate.markEnd(expr, startToken);\n    }\n\n    // 11.2 Left-Hand-Side Expressions\n\n    function parseArguments() {\n        var args = [];\n\n        expect('(');\n\n        if (!match(')')) {\n            while (index < length) {\n                args.push(parseAssignmentExpression());\n                if (match(')')) {\n                    break;\n                }\n                expect(',');\n            }\n        }\n\n        expect(')');\n\n        return args;\n    }\n\n    function parseNonComputedProperty() {\n        var token, startToken;\n\n        startToken = lookahead;\n        token = lex();\n\n        if (!isIdentifierName(token)) {\n            throwUnexpected(token);\n        }\n\n        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n    }\n\n    function parseNonComputedMember() {\n        expect('.');\n\n        return parseNonComputedProperty();\n    }\n\n    function parseComputedMember() {\n        var expr;\n\n        expect('[');\n\n        expr = parseExpression();\n\n        expect(']');\n\n        return expr;\n    }\n\n    function parseNewExpression() {\n        var callee, args, startToken;\n\n        startToken = lookahead;\n        expectKeyword('new');\n        callee = parseLeftHandSideExpression();\n        args = match('(') ? parseArguments() : [];\n\n        return delegate.markEnd(delegate.createNewExpression(callee, args), startToken);\n    }\n\n    function parseLeftHandSideExpressionAllowCall() {\n        var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n        startToken = lookahead;\n        state.allowIn = true;\n        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\n        for (;;) {\n            if (match('.')) {\n                property = parseNonComputedMember();\n                expr = delegate.createMemberExpression('.', expr, property);\n            } else if (match('(')) {\n                args = parseArguments();\n                expr = delegate.createCallExpression(expr, args);\n            } else if (match('[')) {\n                property = parseComputedMember();\n                expr = delegate.createMemberExpression('[', expr, property);\n            } else {\n                break;\n            }\n            delegate.markEnd(expr, startToken);\n        }\n        state.allowIn = previousAllowIn;\n\n        return expr;\n    }\n\n    function parseLeftHandSideExpression() {\n        var expr, property, startToken;\n        assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n        startToken = lookahead;\n\n        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\n        while (match('.') || match('[')) {\n            if (match('[')) {\n                property = parseComputedMember();\n                expr = delegate.createMemberExpression('[', expr, property);\n            } else {\n                property = parseNonComputedMember();\n                expr = delegate.createMemberExpression('.', expr, property);\n            }\n            delegate.markEnd(expr, startToken);\n        }\n        return expr;\n    }\n\n    // 11.3 Postfix Expressions\n\n    function parsePostfixExpression() {\n        var expr, token, startToken = lookahead;\n\n        expr = parseLeftHandSideExpressionAllowCall();\n\n        if (lookahead.type === Token.Punctuator) {\n            if ((match('++') || match('--')) && !peekLineTerminator()) {\n                // 11.3.1, 11.3.2\n                if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                    throwErrorTolerant({}, Messages.StrictLHSPostfix);\n                }\n\n                if (!isLeftHandSide(expr)) {\n                    throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n                }\n\n                token = lex();\n                expr = delegate.markEnd(delegate.createPostfixExpression(token.value, expr), startToken);\n            }\n        }\n\n        return expr;\n    }\n\n    // 11.4 Unary Operators\n\n    function parseUnaryExpression() {\n        var token, expr, startToken;\n\n        if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n            expr = parsePostfixExpression();\n        } else if (match('++') || match('--')) {\n            startToken = lookahead;\n            token = lex();\n            expr = parseUnaryExpression();\n            // 11.4.4, 11.4.5\n            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                throwErrorTolerant({}, Messages.StrictLHSPrefix);\n            }\n\n            if (!isLeftHandSide(expr)) {\n                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n            }\n\n            expr = delegate.createUnaryExpression(token.value, expr);\n            expr = delegate.markEnd(expr, startToken);\n        } else if (match('+') || match('-') || match('~') || match('!')) {\n            startToken = lookahead;\n            token = lex();\n            expr = parseUnaryExpression();\n            expr = delegate.createUnaryExpression(token.value, expr);\n            expr = delegate.markEnd(expr, startToken);\n        } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n            startToken = lookahead;\n            token = lex();\n            expr = parseUnaryExpression();\n            expr = delegate.createUnaryExpression(token.value, expr);\n            expr = delegate.markEnd(expr, startToken);\n            if (strict && expr.operator === 'delete' && expr.argument.type === Syntax.Identifier) {\n                throwErrorTolerant({}, Messages.StrictDelete);\n            }\n        } else {\n            expr = parsePostfixExpression();\n        }\n\n        return expr;\n    }\n\n    function binaryPrecedence(token, allowIn) {\n        var prec = 0;\n\n        if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n            return 0;\n        }\n\n        switch (token.value) {\n        case '||':\n            prec = 1;\n            break;\n\n        case '&&':\n            prec = 2;\n            break;\n\n        case '|':\n            prec = 3;\n            break;\n\n        case '^':\n            prec = 4;\n            break;\n\n        case '&':\n            prec = 5;\n            break;\n\n        case '==':\n        case '!=':\n        case '===':\n        case '!==':\n            prec = 6;\n            break;\n\n        case '<':\n        case '>':\n        case '<=':\n        case '>=':\n        case 'instanceof':\n            prec = 7;\n            break;\n\n        case 'in':\n            prec = allowIn ? 7 : 0;\n            break;\n\n        case '<<':\n        case '>>':\n        case '>>>':\n            prec = 8;\n            break;\n\n        case '+':\n        case '-':\n            prec = 9;\n            break;\n\n        case '*':\n        case '/':\n        case '%':\n            prec = 11;\n            break;\n\n        default:\n            break;\n        }\n\n        return prec;\n    }\n\n    // 11.5 Multiplicative Operators\n    // 11.6 Additive Operators\n    // 11.7 Bitwise Shift Operators\n    // 11.8 Relational Operators\n    // 11.9 Equality Operators\n    // 11.10 Binary Bitwise Operators\n    // 11.11 Binary Logical Operators\n\n    function parseBinaryExpression() {\n        var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n        marker = lookahead;\n        left = parseUnaryExpression();\n\n        token = lookahead;\n        prec = binaryPrecedence(token, state.allowIn);\n        if (prec === 0) {\n            return left;\n        }\n        token.prec = prec;\n        lex();\n\n        markers = [marker, lookahead];\n        right = parseUnaryExpression();\n\n        stack = [left, token, right];\n\n        while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n            // Reduce: make a binary expression from the three topmost entries.\n            while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n                right = stack.pop();\n                operator = stack.pop().value;\n                left = stack.pop();\n                expr = delegate.createBinaryExpression(operator, left, right);\n                markers.pop();\n                marker = markers[markers.length - 1];\n                delegate.markEnd(expr, marker);\n                stack.push(expr);\n            }\n\n            // Shift.\n            token = lex();\n            token.prec = prec;\n            stack.push(token);\n            markers.push(lookahead);\n            expr = parseUnaryExpression();\n            stack.push(expr);\n        }\n\n        // Final reduce to clean-up the stack.\n        i = stack.length - 1;\n        expr = stack[i];\n        markers.pop();\n        while (i > 1) {\n            expr = delegate.createBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n            i -= 2;\n            marker = markers.pop();\n            delegate.markEnd(expr, marker);\n        }\n\n        return expr;\n    }\n\n\n    // 11.12 Conditional Operator\n\n    function parseConditionalExpression() {\n        var expr, previousAllowIn, consequent, alternate, startToken;\n\n        startToken = lookahead;\n\n        expr = parseBinaryExpression();\n\n        if (match('?')) {\n            lex();\n            previousAllowIn = state.allowIn;\n            state.allowIn = true;\n            consequent = parseAssignmentExpression();\n            state.allowIn = previousAllowIn;\n            expect(':');\n            alternate = parseAssignmentExpression();\n\n            expr = delegate.createConditionalExpression(expr, consequent, alternate);\n            delegate.markEnd(expr, startToken);\n        }\n\n        return expr;\n    }\n\n    // 11.13 Assignment Operators\n\n    function parseAssignmentExpression() {\n        var token, left, right, node, startToken;\n\n        token = lookahead;\n        startToken = lookahead;\n\n        node = left = parseConditionalExpression();\n\n        if (matchAssign()) {\n            // LeftHandSideExpression\n            if (!isLeftHandSide(left)) {\n                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n            }\n\n            // 11.13.1\n            if (strict && left.type === Syntax.Identifier && isRestrictedWord(left.name)) {\n                throwErrorTolerant(token, Messages.StrictLHSAssignment);\n            }\n\n            token = lex();\n            right = parseAssignmentExpression();\n            node = delegate.markEnd(delegate.createAssignmentExpression(token.value, left, right), startToken);\n        }\n\n        return node;\n    }\n\n    // 11.14 Comma Operator\n\n    function parseExpression() {\n        var expr, startToken = lookahead;\n\n        expr = parseAssignmentExpression();\n\n        if (match(',')) {\n            expr = delegate.createSequenceExpression([ expr ]);\n\n            while (index < length) {\n                if (!match(',')) {\n                    break;\n                }\n                lex();\n                expr.expressions.push(parseAssignmentExpression());\n            }\n\n            delegate.markEnd(expr, startToken);\n        }\n\n        return expr;\n    }\n\n    // 12.1 Block\n\n    function parseStatementList() {\n        var list = [],\n            statement;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            statement = parseSourceElement();\n            if (typeof statement === 'undefined') {\n                break;\n            }\n            list.push(statement);\n        }\n\n        return list;\n    }\n\n    function parseBlock() {\n        var block, startToken;\n\n        startToken = lookahead;\n        expect('{');\n\n        block = parseStatementList();\n\n        expect('}');\n\n        return delegate.markEnd(delegate.createBlockStatement(block), startToken);\n    }\n\n    // 12.2 Variable Statement\n\n    function parseVariableIdentifier() {\n        var token, startToken;\n\n        startToken = lookahead;\n        token = lex();\n\n        if (token.type !== Token.Identifier) {\n            throwUnexpected(token);\n        }\n\n        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n    }\n\n    function parseVariableDeclaration(kind) {\n        var init = null, id, startToken;\n\n        startToken = lookahead;\n        id = parseVariableIdentifier();\n\n        // 12.2.1\n        if (strict && isRestrictedWord(id.name)) {\n            throwErrorTolerant({}, Messages.StrictVarName);\n        }\n\n        if (kind === 'const') {\n            expect('=');\n            init = parseAssignmentExpression();\n        } else if (match('=')) {\n            lex();\n            init = parseAssignmentExpression();\n        }\n\n        return delegate.markEnd(delegate.createVariableDeclarator(id, init), startToken);\n    }\n\n    function parseVariableDeclarationList(kind) {\n        var list = [];\n\n        do {\n            list.push(parseVariableDeclaration(kind));\n            if (!match(',')) {\n                break;\n            }\n            lex();\n        } while (index < length);\n\n        return list;\n    }\n\n    function parseVariableStatement() {\n        var declarations;\n\n        expectKeyword('var');\n\n        declarations = parseVariableDeclarationList();\n\n        consumeSemicolon();\n\n        return delegate.createVariableDeclaration(declarations, 'var');\n    }\n\n    // kind may be `const` or `let`\n    // Both are experimental and not in the specification yet.\n    // see http://wiki.ecmascript.org/doku.php?id=harmony:const\n    // and http://wiki.ecmascript.org/doku.php?id=harmony:let\n    function parseConstLetDeclaration(kind) {\n        var declarations, startToken;\n\n        startToken = lookahead;\n\n        expectKeyword(kind);\n\n        declarations = parseVariableDeclarationList(kind);\n\n        consumeSemicolon();\n\n        return delegate.markEnd(delegate.createVariableDeclaration(declarations, kind), startToken);\n    }\n\n    // 12.3 Empty Statement\n\n    function parseEmptyStatement() {\n        expect(';');\n        return delegate.createEmptyStatement();\n    }\n\n    // 12.4 Expression Statement\n\n    function parseExpressionStatement() {\n        var expr = parseExpression();\n        consumeSemicolon();\n        return delegate.createExpressionStatement(expr);\n    }\n\n    // 12.5 If statement\n\n    function parseIfStatement() {\n        var test, consequent, alternate;\n\n        expectKeyword('if');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        consequent = parseStatement();\n\n        if (matchKeyword('else')) {\n            lex();\n            alternate = parseStatement();\n        } else {\n            alternate = null;\n        }\n\n        return delegate.createIfStatement(test, consequent, alternate);\n    }\n\n    // 12.6 Iteration Statements\n\n    function parseDoWhileStatement() {\n        var body, test, oldInIteration;\n\n        expectKeyword('do');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        expectKeyword('while');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        if (match(';')) {\n            lex();\n        }\n\n        return delegate.createDoWhileStatement(body, test);\n    }\n\n    function parseWhileStatement() {\n        var test, body, oldInIteration;\n\n        expectKeyword('while');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        return delegate.createWhileStatement(test, body);\n    }\n\n    function parseForVariableDeclaration() {\n        var token, declarations, startToken;\n\n        startToken = lookahead;\n        token = lex();\n        declarations = parseVariableDeclarationList();\n\n        return delegate.markEnd(delegate.createVariableDeclaration(declarations, token.value), startToken);\n    }\n\n    function parseForStatement() {\n        var init, test, update, left, right, body, oldInIteration, previousAllowIn = state.allowIn;\n\n        init = test = update = null;\n\n        expectKeyword('for');\n\n        expect('(');\n\n        if (match(';')) {\n            lex();\n        } else {\n            if (matchKeyword('var') || matchKeyword('let')) {\n                state.allowIn = false;\n                init = parseForVariableDeclaration();\n                state.allowIn = previousAllowIn;\n\n                if (init.declarations.length === 1 && matchKeyword('in')) {\n                    lex();\n                    left = init;\n                    right = parseExpression();\n                    init = null;\n                }\n            } else {\n                state.allowIn = false;\n                init = parseExpression();\n                state.allowIn = previousAllowIn;\n\n                if (matchKeyword('in')) {\n                    // LeftHandSideExpression\n                    if (!isLeftHandSide(init)) {\n                        throwErrorTolerant({}, Messages.InvalidLHSInForIn);\n                    }\n\n                    lex();\n                    left = init;\n                    right = parseExpression();\n                    init = null;\n                }\n            }\n\n            if (typeof left === 'undefined') {\n                expect(';');\n            }\n        }\n\n        if (typeof left === 'undefined') {\n\n            if (!match(';')) {\n                test = parseExpression();\n            }\n            expect(';');\n\n            if (!match(')')) {\n                update = parseExpression();\n            }\n        }\n\n        expect(')');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        return (typeof left === 'undefined') ?\n                delegate.createForStatement(init, test, update, body) :\n                delegate.createForInStatement(left, right, body);\n    }\n\n    // 12.7 The continue statement\n\n    function parseContinueStatement() {\n        var label = null, key;\n\n        expectKeyword('continue');\n\n        // Optimize the most common form: 'continue;'.\n        if (source.charCodeAt(index) === 0x3B) {\n            lex();\n\n            if (!state.inIteration) {\n                throwError({}, Messages.IllegalContinue);\n            }\n\n            return delegate.createContinueStatement(null);\n        }\n\n        if (peekLineTerminator()) {\n            if (!state.inIteration) {\n                throwError({}, Messages.IllegalContinue);\n            }\n\n            return delegate.createContinueStatement(null);\n        }\n\n        if (lookahead.type === Token.Identifier) {\n            label = parseVariableIdentifier();\n\n            key = '$' + label.name;\n            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n                throwError({}, Messages.UnknownLabel, label.name);\n            }\n        }\n\n        consumeSemicolon();\n\n        if (label === null && !state.inIteration) {\n            throwError({}, Messages.IllegalContinue);\n        }\n\n        return delegate.createContinueStatement(label);\n    }\n\n    // 12.8 The break statement\n\n    function parseBreakStatement() {\n        var label = null, key;\n\n        expectKeyword('break');\n\n        // Catch the very common case first: immediately a semicolon (U+003B).\n        if (source.charCodeAt(index) === 0x3B) {\n            lex();\n\n            if (!(state.inIteration || state.inSwitch)) {\n                throwError({}, Messages.IllegalBreak);\n            }\n\n            return delegate.createBreakStatement(null);\n        }\n\n        if (peekLineTerminator()) {\n            if (!(state.inIteration || state.inSwitch)) {\n                throwError({}, Messages.IllegalBreak);\n            }\n\n            return delegate.createBreakStatement(null);\n        }\n\n        if (lookahead.type === Token.Identifier) {\n            label = parseVariableIdentifier();\n\n            key = '$' + label.name;\n            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n                throwError({}, Messages.UnknownLabel, label.name);\n            }\n        }\n\n        consumeSemicolon();\n\n        if (label === null && !(state.inIteration || state.inSwitch)) {\n            throwError({}, Messages.IllegalBreak);\n        }\n\n        return delegate.createBreakStatement(label);\n    }\n\n    // 12.9 The return statement\n\n    function parseReturnStatement() {\n        var argument = null;\n\n        expectKeyword('return');\n\n        if (!state.inFunctionBody) {\n            throwErrorTolerant({}, Messages.IllegalReturn);\n        }\n\n        // 'return' followed by a space and an identifier is very common.\n        if (source.charCodeAt(index) === 0x20) {\n            if (isIdentifierStart(source.charCodeAt(index + 1))) {\n                argument = parseExpression();\n                consumeSemicolon();\n                return delegate.createReturnStatement(argument);\n            }\n        }\n\n        if (peekLineTerminator()) {\n            return delegate.createReturnStatement(null);\n        }\n\n        if (!match(';')) {\n            if (!match('}') && lookahead.type !== Token.EOF) {\n                argument = parseExpression();\n            }\n        }\n\n        consumeSemicolon();\n\n        return delegate.createReturnStatement(argument);\n    }\n\n    // 12.10 The with statement\n\n    function parseWithStatement() {\n        var object, body;\n\n        if (strict) {\n            // TODO(ikarienator): Should we update the test cases instead?\n            skipComment();\n            throwErrorTolerant({}, Messages.StrictModeWith);\n        }\n\n        expectKeyword('with');\n\n        expect('(');\n\n        object = parseExpression();\n\n        expect(')');\n\n        body = parseStatement();\n\n        return delegate.createWithStatement(object, body);\n    }\n\n    // 12.10 The swith statement\n\n    function parseSwitchCase() {\n        var test, consequent = [], statement, startToken;\n\n        startToken = lookahead;\n        if (matchKeyword('default')) {\n            lex();\n            test = null;\n        } else {\n            expectKeyword('case');\n            test = parseExpression();\n        }\n        expect(':');\n\n        while (index < length) {\n            if (match('}') || matchKeyword('default') || matchKeyword('case')) {\n                break;\n            }\n            statement = parseStatement();\n            consequent.push(statement);\n        }\n\n        return delegate.markEnd(delegate.createSwitchCase(test, consequent), startToken);\n    }\n\n    function parseSwitchStatement() {\n        var discriminant, cases, clause, oldInSwitch, defaultFound;\n\n        expectKeyword('switch');\n\n        expect('(');\n\n        discriminant = parseExpression();\n\n        expect(')');\n\n        expect('{');\n\n        cases = [];\n\n        if (match('}')) {\n            lex();\n            return delegate.createSwitchStatement(discriminant, cases);\n        }\n\n        oldInSwitch = state.inSwitch;\n        state.inSwitch = true;\n        defaultFound = false;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            clause = parseSwitchCase();\n            if (clause.test === null) {\n                if (defaultFound) {\n                    throwError({}, Messages.MultipleDefaultsInSwitch);\n                }\n                defaultFound = true;\n            }\n            cases.push(clause);\n        }\n\n        state.inSwitch = oldInSwitch;\n\n        expect('}');\n\n        return delegate.createSwitchStatement(discriminant, cases);\n    }\n\n    // 12.13 The throw statement\n\n    function parseThrowStatement() {\n        var argument;\n\n        expectKeyword('throw');\n\n        if (peekLineTerminator()) {\n            throwError({}, Messages.NewlineAfterThrow);\n        }\n\n        argument = parseExpression();\n\n        consumeSemicolon();\n\n        return delegate.createThrowStatement(argument);\n    }\n\n    // 12.14 The try statement\n\n    function parseCatchClause() {\n        var param, body, startToken;\n\n        startToken = lookahead;\n        expectKeyword('catch');\n\n        expect('(');\n        if (match(')')) {\n            throwUnexpected(lookahead);\n        }\n\n        param = parseVariableIdentifier();\n        // 12.14.1\n        if (strict && isRestrictedWord(param.name)) {\n            throwErrorTolerant({}, Messages.StrictCatchVariable);\n        }\n\n        expect(')');\n        body = parseBlock();\n        return delegate.markEnd(delegate.createCatchClause(param, body), startToken);\n    }\n\n    function parseTryStatement() {\n        var block, handlers = [], finalizer = null;\n\n        expectKeyword('try');\n\n        block = parseBlock();\n\n        if (matchKeyword('catch')) {\n            handlers.push(parseCatchClause());\n        }\n\n        if (matchKeyword('finally')) {\n            lex();\n            finalizer = parseBlock();\n        }\n\n        if (handlers.length === 0 && !finalizer) {\n            throwError({}, Messages.NoCatchOrFinally);\n        }\n\n        return delegate.createTryStatement(block, [], handlers, finalizer);\n    }\n\n    // 12.15 The debugger statement\n\n    function parseDebuggerStatement() {\n        expectKeyword('debugger');\n\n        consumeSemicolon();\n\n        return delegate.createDebuggerStatement();\n    }\n\n    // 12 Statements\n\n    function parseStatement() {\n        var type = lookahead.type,\n            expr,\n            labeledBody,\n            key,\n            startToken;\n\n        if (type === Token.EOF) {\n            throwUnexpected(lookahead);\n        }\n\n        if (type === Token.Punctuator && lookahead.value === '{') {\n            return parseBlock();\n        }\n\n        startToken = lookahead;\n\n        if (type === Token.Punctuator) {\n            switch (lookahead.value) {\n            case ';':\n                return delegate.markEnd(parseEmptyStatement(), startToken);\n            case '(':\n                return delegate.markEnd(parseExpressionStatement(), startToken);\n            default:\n                break;\n            }\n        }\n\n        if (type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'break':\n                return delegate.markEnd(parseBreakStatement(), startToken);\n            case 'continue':\n                return delegate.markEnd(parseContinueStatement(), startToken);\n            case 'debugger':\n                return delegate.markEnd(parseDebuggerStatement(), startToken);\n            case 'do':\n                return delegate.markEnd(parseDoWhileStatement(), startToken);\n            case 'for':\n                return delegate.markEnd(parseForStatement(), startToken);\n            case 'function':\n                return delegate.markEnd(parseFunctionDeclaration(), startToken);\n            case 'if':\n                return delegate.markEnd(parseIfStatement(), startToken);\n            case 'return':\n                return delegate.markEnd(parseReturnStatement(), startToken);\n            case 'switch':\n                return delegate.markEnd(parseSwitchStatement(), startToken);\n            case 'throw':\n                return delegate.markEnd(parseThrowStatement(), startToken);\n            case 'try':\n                return delegate.markEnd(parseTryStatement(), startToken);\n            case 'var':\n                return delegate.markEnd(parseVariableStatement(), startToken);\n            case 'while':\n                return delegate.markEnd(parseWhileStatement(), startToken);\n            case 'with':\n                return delegate.markEnd(parseWithStatement(), startToken);\n            default:\n                break;\n            }\n        }\n\n        expr = parseExpression();\n\n        // 12.12 Labelled Statements\n        if ((expr.type === Syntax.Identifier) && match(':')) {\n            lex();\n\n            key = '$' + expr.name;\n            if (Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n                throwError({}, Messages.Redeclaration, 'Label', expr.name);\n            }\n\n            state.labelSet[key] = true;\n            labeledBody = parseStatement();\n            delete state.labelSet[key];\n            return delegate.markEnd(delegate.createLabeledStatement(expr, labeledBody), startToken);\n        }\n\n        consumeSemicolon();\n\n        return delegate.markEnd(delegate.createExpressionStatement(expr), startToken);\n    }\n\n    // 13 Function Definition\n\n    function parseFunctionSourceElements() {\n        var sourceElement, sourceElements = [], token, directive, firstRestricted,\n            oldLabelSet, oldInIteration, oldInSwitch, oldInFunctionBody, startToken;\n\n        startToken = lookahead;\n        expect('{');\n\n        while (index < length) {\n            if (lookahead.type !== Token.StringLiteral) {\n                break;\n            }\n            token = lookahead;\n\n            sourceElement = parseSourceElement();\n            sourceElements.push(sourceElement);\n            if (sourceElement.expression.type !== Syntax.Literal) {\n                // this is not directive\n                break;\n            }\n            directive = source.slice(token.start + 1, token.end - 1);\n            if (directive === 'use strict') {\n                strict = true;\n                if (firstRestricted) {\n                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n                }\n            } else {\n                if (!firstRestricted && token.octal) {\n                    firstRestricted = token;\n                }\n            }\n        }\n\n        oldLabelSet = state.labelSet;\n        oldInIteration = state.inIteration;\n        oldInSwitch = state.inSwitch;\n        oldInFunctionBody = state.inFunctionBody;\n\n        state.labelSet = {};\n        state.inIteration = false;\n        state.inSwitch = false;\n        state.inFunctionBody = true;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            sourceElement = parseSourceElement();\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            sourceElements.push(sourceElement);\n        }\n\n        expect('}');\n\n        state.labelSet = oldLabelSet;\n        state.inIteration = oldInIteration;\n        state.inSwitch = oldInSwitch;\n        state.inFunctionBody = oldInFunctionBody;\n\n        return delegate.markEnd(delegate.createBlockStatement(sourceElements), startToken);\n    }\n\n    function parseParams(firstRestricted) {\n        var param, params = [], token, stricted, paramSet, key, message;\n        expect('(');\n\n        if (!match(')')) {\n            paramSet = {};\n            while (index < length) {\n                token = lookahead;\n                param = parseVariableIdentifier();\n                key = '$' + token.value;\n                if (strict) {\n                    if (isRestrictedWord(token.value)) {\n                        stricted = token;\n                        message = Messages.StrictParamName;\n                    }\n                    if (Object.prototype.hasOwnProperty.call(paramSet, key)) {\n                        stricted = token;\n                        message = Messages.StrictParamDupe;\n                    }\n                } else if (!firstRestricted) {\n                    if (isRestrictedWord(token.value)) {\n                        firstRestricted = token;\n                        message = Messages.StrictParamName;\n                    } else if (isStrictModeReservedWord(token.value)) {\n                        firstRestricted = token;\n                        message = Messages.StrictReservedWord;\n                    } else if (Object.prototype.hasOwnProperty.call(paramSet, key)) {\n                        firstRestricted = token;\n                        message = Messages.StrictParamDupe;\n                    }\n                }\n                params.push(param);\n                paramSet[key] = true;\n                if (match(')')) {\n                    break;\n                }\n                expect(',');\n            }\n        }\n\n        expect(')');\n\n        return {\n            params: params,\n            stricted: stricted,\n            firstRestricted: firstRestricted,\n            message: message\n        };\n    }\n\n    function parseFunctionDeclaration() {\n        var id, params = [], body, token, stricted, tmp, firstRestricted, message, previousStrict, startToken;\n\n        startToken = lookahead;\n\n        expectKeyword('function');\n        token = lookahead;\n        id = parseVariableIdentifier();\n        if (strict) {\n            if (isRestrictedWord(token.value)) {\n                throwErrorTolerant(token, Messages.StrictFunctionName);\n            }\n        } else {\n            if (isRestrictedWord(token.value)) {\n                firstRestricted = token;\n                message = Messages.StrictFunctionName;\n            } else if (isStrictModeReservedWord(token.value)) {\n                firstRestricted = token;\n                message = Messages.StrictReservedWord;\n            }\n        }\n\n        tmp = parseParams(firstRestricted);\n        params = tmp.params;\n        stricted = tmp.stricted;\n        firstRestricted = tmp.firstRestricted;\n        if (tmp.message) {\n            message = tmp.message;\n        }\n\n        previousStrict = strict;\n        body = parseFunctionSourceElements();\n        if (strict && firstRestricted) {\n            throwError(firstRestricted, message);\n        }\n        if (strict && stricted) {\n            throwErrorTolerant(stricted, message);\n        }\n        strict = previousStrict;\n\n        return delegate.markEnd(delegate.createFunctionDeclaration(id, params, [], body), startToken);\n    }\n\n    function parseFunctionExpression() {\n        var token, id = null, stricted, firstRestricted, message, tmp, params = [], body, previousStrict, startToken;\n\n        startToken = lookahead;\n        expectKeyword('function');\n\n        if (!match('(')) {\n            token = lookahead;\n            id = parseVariableIdentifier();\n            if (strict) {\n                if (isRestrictedWord(token.value)) {\n                    throwErrorTolerant(token, Messages.StrictFunctionName);\n                }\n            } else {\n                if (isRestrictedWord(token.value)) {\n                    firstRestricted = token;\n                    message = Messages.StrictFunctionName;\n                } else if (isStrictModeReservedWord(token.value)) {\n                    firstRestricted = token;\n                    message = Messages.StrictReservedWord;\n                }\n            }\n        }\n\n        tmp = parseParams(firstRestricted);\n        params = tmp.params;\n        stricted = tmp.stricted;\n        firstRestricted = tmp.firstRestricted;\n        if (tmp.message) {\n            message = tmp.message;\n        }\n\n        previousStrict = strict;\n        body = parseFunctionSourceElements();\n        if (strict && firstRestricted) {\n            throwError(firstRestricted, message);\n        }\n        if (strict && stricted) {\n            throwErrorTolerant(stricted, message);\n        }\n        strict = previousStrict;\n\n        return delegate.markEnd(delegate.createFunctionExpression(id, params, [], body), startToken);\n    }\n\n    // 14 Program\n\n    function parseSourceElement() {\n        if (lookahead.type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'const':\n            case 'let':\n                return parseConstLetDeclaration(lookahead.value);\n            case 'function':\n                return parseFunctionDeclaration();\n            default:\n                return parseStatement();\n            }\n        }\n\n        if (lookahead.type !== Token.EOF) {\n            return parseStatement();\n        }\n    }\n\n    function parseSourceElements() {\n        var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n        while (index < length) {\n            token = lookahead;\n            if (token.type !== Token.StringLiteral) {\n                break;\n            }\n\n            sourceElement = parseSourceElement();\n            sourceElements.push(sourceElement);\n            if (sourceElement.expression.type !== Syntax.Literal) {\n                // this is not directive\n                break;\n            }\n            directive = source.slice(token.start + 1, token.end - 1);\n            if (directive === 'use strict') {\n                strict = true;\n                if (firstRestricted) {\n                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n                }\n            } else {\n                if (!firstRestricted && token.octal) {\n                    firstRestricted = token;\n                }\n            }\n        }\n\n        while (index < length) {\n            sourceElement = parseSourceElement();\n            /* istanbul ignore if */\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            sourceElements.push(sourceElement);\n        }\n        return sourceElements;\n    }\n\n    function parseProgram() {\n        var body, startToken;\n\n        skipComment();\n        peek();\n        startToken = lookahead;\n        strict = false;\n\n        body = parseSourceElements();\n        return delegate.markEnd(delegate.createProgram(body), startToken);\n    }\n\n    function filterTokenLocation() {\n        var i, entry, token, tokens = [];\n\n        for (i = 0; i < extra.tokens.length; ++i) {\n            entry = extra.tokens[i];\n            token = {\n                type: entry.type,\n                value: entry.value\n            };\n            if (extra.range) {\n                token.range = entry.range;\n            }\n            if (extra.loc) {\n                token.loc = entry.loc;\n            }\n            tokens.push(token);\n        }\n\n        extra.tokens = tokens;\n    }\n\n    function tokenize(code, options) {\n        var toString,\n            token,\n            tokens;\n\n        toString = String;\n        if (typeof code !== 'string' && !(code instanceof String)) {\n            code = toString(code);\n        }\n\n        delegate = SyntaxTreeDelegate;\n        source = code;\n        index = 0;\n        lineNumber = (source.length > 0) ? 1 : 0;\n        lineStart = 0;\n        length = source.length;\n        lookahead = null;\n        state = {\n            allowIn: true,\n            labelSet: {},\n            inFunctionBody: false,\n            inIteration: false,\n            inSwitch: false,\n            lastCommentStart: -1\n        };\n\n        extra = {};\n\n        // Options matching.\n        options = options || {};\n\n        // Of course we collect tokens here.\n        options.tokens = true;\n        extra.tokens = [];\n        extra.tokenize = true;\n        // The following two fields are necessary to compute the Regex tokens.\n        extra.openParenToken = -1;\n        extra.openCurlyToken = -1;\n\n        extra.range = (typeof options.range === 'boolean') && options.range;\n        extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n        if (typeof options.comment === 'boolean' && options.comment) {\n            extra.comments = [];\n        }\n        if (typeof options.tolerant === 'boolean' && options.tolerant) {\n            extra.errors = [];\n        }\n\n        try {\n            peek();\n            if (lookahead.type === Token.EOF) {\n                return extra.tokens;\n            }\n\n            token = lex();\n            while (lookahead.type !== Token.EOF) {\n                try {\n                    token = lex();\n                } catch (lexError) {\n                    token = lookahead;\n                    if (extra.errors) {\n                        extra.errors.push(lexError);\n                        // We have to break on the first error\n                        // to avoid infinite loops.\n                        break;\n                    } else {\n                        throw lexError;\n                    }\n                }\n            }\n\n            filterTokenLocation();\n            tokens = extra.tokens;\n            if (typeof extra.comments !== 'undefined') {\n                tokens.comments = extra.comments;\n            }\n            if (typeof extra.errors !== 'undefined') {\n                tokens.errors = extra.errors;\n            }\n        } catch (e) {\n            throw e;\n        } finally {\n            extra = {};\n        }\n        return tokens;\n    }\n\n    function parse(code, options) {\n        var program, toString;\n\n        toString = String;\n        if (typeof code !== 'string' && !(code instanceof String)) {\n            code = toString(code);\n        }\n\n        delegate = SyntaxTreeDelegate;\n        source = code;\n        index = 0;\n        lineNumber = (source.length > 0) ? 1 : 0;\n        lineStart = 0;\n        length = source.length;\n        lookahead = null;\n        state = {\n            allowIn: true,\n            labelSet: {},\n            inFunctionBody: false,\n            inIteration: false,\n            inSwitch: false,\n            lastCommentStart: -1\n        };\n\n        extra = {};\n        if (typeof options !== 'undefined') {\n            extra.range = (typeof options.range === 'boolean') && options.range;\n            extra.loc = (typeof options.loc === 'boolean') && options.loc;\n            extra.attachComment = (typeof options.attachComment === 'boolean') && options.attachComment;\n\n            if (extra.loc && options.source !== null && options.source !== undefined) {\n                extra.source = toString(options.source);\n            }\n\n            if (typeof options.tokens === 'boolean' && options.tokens) {\n                extra.tokens = [];\n            }\n            if (typeof options.comment === 'boolean' && options.comment) {\n                extra.comments = [];\n            }\n            if (typeof options.tolerant === 'boolean' && options.tolerant) {\n                extra.errors = [];\n            }\n            if (extra.attachComment) {\n                extra.range = true;\n                extra.comments = [];\n                extra.bottomRightStack = [];\n                extra.trailingComments = [];\n                extra.leadingComments = [];\n            }\n        }\n\n        try {\n            program = parseProgram();\n            if (typeof extra.comments !== 'undefined') {\n                program.comments = extra.comments;\n            }\n            if (typeof extra.tokens !== 'undefined') {\n                filterTokenLocation();\n                program.tokens = extra.tokens;\n            }\n            if (typeof extra.errors !== 'undefined') {\n                program.errors = extra.errors;\n            }\n        } catch (e) {\n            throw e;\n        } finally {\n            extra = {};\n        }\n\n        return program;\n    }\n\n    // Sync with *.json manifests.\n    exports.version = '1.2.5';\n\n    exports.tokenize = tokenize;\n\n    exports.parse = parse;\n\n    // Deep copy.\n   /* istanbul ignore next */\n    exports.Syntax = (function () {\n        var name, types = {};\n\n        if (typeof Object.create === 'function') {\n            types = Object.create(null);\n        }\n\n        for (name in Syntax) {\n            if (Syntax.hasOwnProperty(name)) {\n                types[name] = Syntax[name];\n            }\n        }\n\n        if (typeof Object.freeze === 'function') {\n            Object.freeze(types);\n        }\n\n        return types;\n    }());\n\n}));\n/* vim: set sw=4 ts=4 et tw=80 : */\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (samples, dim) {\n\n  var randArray = new Float64Array(samples * dim);\n\n  for (var i = 0; i < randArray.length; i++) {\n    randArray[i] = gaussRandom() * 1e-4;\n  }\n\n  return (0, _ndarray2.default)(randArray, [samples, dim]);\n};\n\nvar _ndarray = require('ndarray');\n\nvar _ndarray2 = _interopRequireDefault(_ndarray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// random Gaussian distribution based on Box-Muller transform\nfunction gaussRandom() {\n  var u = 2 * Math.random() - 1;\n  var v = 2 * Math.random() - 1;\n  var r = u * u + v * v;\n  if (r == 0 || r > 1) return gaussRandom();\n  return u * Math.sqrt(-2 * Math.log(r) / r);\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (distances, perplexity) {\n  var nSteps = 100;\n  var nSamples = distances.shape[0];\n  var P_cond = (0, _ndarray2.default)(new Float64Array(nSamples * nSamples), [nSamples, nSamples]);\n  var P = (0, _ndarray2.default)(new Float64Array(nSamples * nSamples), [nSamples, nSamples]);\n\n  var beta = undefined,\n      betaMin = undefined,\n      betaMax = Infinity;\n  var betaSum = 0.0;\n\n  var desired_entropy = Math.log(perplexity);\n  var entropyDiff = undefined,\n      entropy = undefined;\n  var sum_Pi = undefined,\n      sum_disti_Pi = undefined;\n\n  for (var i = 0; i < nSamples; i++) {\n    beta = 1.0;\n    betaMin = -Infinity;\n    betaMax = Infinity;\n\n    for (var step = 0; step < nSteps; step++) {\n\n      for (var j = 0; j < nSamples; j++) {\n        P_cond.set(i, j, Math.exp(-distances.get(i, j) * beta));\n      }\n\n      P_cond.set(i, i, 0.0);\n      sum_Pi = 0.0;\n      for (var j = 0; j < nSamples; j++) {\n        sum_Pi += P_cond.get(i, j);\n      }\n      if (sum_Pi == 0.0) sum_Pi = EPSILON_DBL;\n\n      sum_disti_Pi = 0.0;\n      for (var j = 0; j < nSamples; j++) {\n        P_cond.set(i, j, P_cond.get(i, j) / sum_Pi);\n        sum_disti_Pi += distances.get(i, j) * P_cond.get(i, j);\n      }\n\n      entropy = Math.log(sum_Pi) + beta * sum_disti_Pi;\n      entropyDiff = entropy - desired_entropy;\n      if (Math.abs(entropyDiff) <= PERPLEXITY_TOLERANCE) break;\n\n      if (entropyDiff > 0.0) {\n        betaMin = beta;\n        if (betaMax == Infinity) {\n          beta = beta * 2.0;\n        } else {\n          beta = (beta + betaMax) / 2.0;\n        }\n      } else {\n        betaMax = beta;\n        if (betaMin == -Infinity) {\n          beta = beta / 2.0;\n        } else {\n          beta = (beta + betaMin) / 2.0;\n        }\n      }\n    }\n\n    betaSum += beta;\n  }\n\n  _ndarrayOps2.default.add(P, P_cond, P_cond.transpose(1, 0));\n  var sum_P = Math.max(_ndarrayOps2.default.sum(P), MACHINE_EPSILON);\n  _ndarrayOps2.default.divseq(P, sum_P);\n  _ndarrayOps2.default.maxseq(P, MACHINE_EPSILON);\n  return P;\n};\n\nvar _ndarray = require('ndarray');\n\nvar _ndarray2 = _interopRequireDefault(_ndarray);\n\nvar _ndarrayOps = require('ndarray-ops');\n\nvar _ndarrayOps2 = _interopRequireDefault(_ndarrayOps);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EPSILON_DBL = 1e-7;\nvar MACHINE_EPSILON = Number.EPSILON || 2.220446049250313e-16;\nvar PERPLEXITY_TOLERANCE = 1e-5;\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (embedding, P, alpha) {\n\n  var nSamples = embedding.shape[0];\n  var dim = embedding.shape[1];\n\n  // Q: Student's t-distribution\n  var Q = (0, _ndarray2.default)(new Float64Array(nSamples * nSamples), [nSamples, nSamples]);\n  var n = (0, _pairwiseDistances2.default)(embedding, 'euclidean');\n  square(n);\n  var beta = (alpha + 1.0) / -2.0;\n  _ndarrayOps2.default.powseq(_ndarrayOps2.default.divseq(_ndarrayOps2.default.addseq(n, 1), alpha), beta);\n  for (var i = 0; i < nSamples; i++) {\n    n.set(i, i, 0);\n  }\n  var sum_n = Math.max(_ndarrayOps2.default.sum(n), MACHINE_EPSILON);\n  _ndarrayOps2.default.divs(Q, n, sum_n);\n  _ndarrayOps2.default.maxseq(Q, MACHINE_EPSILON);\n\n  // Kullback-Leibler divergence of P and Q\n  var temp = (0, _ndarray2.default)(new Float64Array(nSamples * nSamples), [nSamples, nSamples]);\n  var temp2 = (0, _ndarray2.default)(new Float64Array(nSamples * nSamples), [nSamples, nSamples]);\n  _ndarrayOps2.default.div(temp, P, Q);\n  _ndarrayOps2.default.logeq(temp);\n  _ndarrayOps2.default.assign(temp2, P);\n  var kl_divergence = _ndarrayOps2.default.sum(_ndarrayOps2.default.muleq(temp, temp2));\n\n  // calculate gradient\n  var grad = (0, _ndarray2.default)(new Float64Array(embedding.size), embedding.shape);\n  var PQd = (0, _ndarray2.default)(new Float64Array(nSamples * nSamples), [nSamples, nSamples]);\n  _ndarrayOps2.default.sub(PQd, P, Q);\n  _ndarrayOps2.default.muleq(PQd, n);\n  for (var i = 0; i < nSamples; i++) {\n    for (var d = 0; d < dim; d++) {\n      var _temp = (0, _ndarray2.default)(new Float64Array(embedding.shape[0]), [embedding.shape[0]]);\n      _ndarrayOps2.default.assign(_temp, embedding.pick(null, d));\n      _ndarrayOps2.default.addseq(_ndarrayOps2.default.negeq(_temp), embedding.get(i, d));\n      _ndarrayOps2.default.muleq(_temp, PQd.pick(i, null));\n      grad.set(i, d, _ndarrayOps2.default.sum(_temp));\n    }\n  }\n  var c = 2.0 * (alpha + 1.0) / alpha;\n  _ndarrayOps2.default.mulseq(grad, c);\n\n  return [kl_divergence, grad];\n};\n\nvar _ndarray = require('ndarray');\n\nvar _ndarray2 = _interopRequireDefault(_ndarray);\n\nvar _ndarrayOps = require('ndarray-ops');\n\nvar _ndarrayOps2 = _interopRequireDefault(_ndarrayOps);\n\nvar _cwise = require('cwise');\n\nvar _cwise2 = _interopRequireDefault(_cwise);\n\nvar _pairwiseDistances = require('./pairwise-distances');\n\nvar _pairwiseDistances2 = _interopRequireDefault(_pairwiseDistances);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MACHINE_EPSILON = Number.EPSILON || 2.220446049250313e-16;\n\nvar square = (0, _cwise2.default)({\n  args: ['array'],\n  body: function body(a) {\n    a = a * a;\n  }\n});\n\nmodule.exports = exports['default'];"],"sourceRoot":""}